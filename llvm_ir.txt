declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@Mod = dso_local constant i32 10007
@Map = dso_local constant [2 x[2 x i32] ] [ [2 x i32 ] [i32 1 ,i32 1],  [2 x i32 ] [i32 1 ,i32 0]]
@Bound = dso_local constant [2 x i32] [i32 2 ,i32 2 ]
@T = dso_local global i32 0
@f = dso_local global [2 x i32] [i32 1 ,i32 0 ]
@ori = dso_local global [2 x[2 x i32] ] [ [2 x i32 ] [i32 1 ,i32 0],  [2 x i32] zeroinitializer]
define dso_local i32 @main() {
    %1 = call i32 @getint()
    store i32 %1, i32* @T
    %2 = alloca [2 x [2 x i32]]
    %3 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %2, i32 0, i32 0
    %4 = alloca [2 x i32]*
    store [2 x i32]* %3, [2 x i32]** %4
    %5 = load [2 x i32]* , [2 x i32]** %4
    %6 = getelementptr [2 x i32], [2 x i32]* %5, i32 0
    %7 = getelementptr [2 x i32], [2 x i32]* %6, i32 0, i32 0
    store i32 1, i32* %7
    %8 = load [2 x i32]* , [2 x i32]** %4
    %9 = getelementptr [2 x i32], [2 x i32]* %8, i32 0
    %10 = getelementptr [2 x i32], [2 x i32]* %9, i32 0, i32 1
    store i32 1, i32* %10
    %11 = load [2 x i32]* , [2 x i32]** %4
    %12 = getelementptr [2 x i32], [2 x i32]* %11, i32 1
    %13 = getelementptr [2 x i32], [2 x i32]* %12, i32 0, i32 0
    store i32 1, i32* %13
    %14 = load [2 x i32]* , [2 x i32]** %4
    %15 = getelementptr [2 x i32], [2 x i32]* %14, i32 1
    %16 = getelementptr [2 x i32], [2 x i32]* %15, i32 0, i32 1
    store i32 0, i32* %16
    br label %17
17:
    br label %18
18:
    %19 = load i32 , i32* @T
    %20 = icmp ne i32 %19, 0
    br i1 %20, label %21, label %152
21:
    %22 = load i32 , i32* @T
    %23 = sdiv i32 %22, 2
    %24 = mul i32 %23, 2
    %25 = load i32 , i32* @T
    %26 = icmp ne i32 %24, %25
    br i1 %26, label %27, label %88
27:
    %28 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @ori, i32 0, i32 0
    %29 = alloca [2 x i32]*
    store [2 x i32]* %28, [2 x i32]** %29
    %30 = alloca [2 x i32]*
    store [2 x i32]* %3, [2 x i32]** %30
    %31 = alloca [2 x [2 x i32]]
    move  %32, 0
    move  %33, 0
    move  %34, 0
    br label %35
35:
    %36 = icmp slt i32 %33, 2
    br i1 %36, label %37, label %68
37:
    move  %38, %32
    move  %39, 0
    move  %40, %34
    br label %41
41:
    %42 = icmp slt i32 %39, 2
    br i1 %42, label %43, label %66
43:
    move  %44, 0
    move  %45, 0
    br label %46
46:
    %47 = icmp slt i32 %45, 2
    br i1 %47, label %48, label %62
48:
    %49 = load [2 x i32]* , [2 x i32]** %29
    %50 = getelementptr [2 x i32], [2 x i32]* %49, i32 %33
    %51 = getelementptr [2 x i32], [2 x i32]* %50, i32 0, i32 %45
    %52 = load i32 , i32* %51
    %53 = load [2 x i32]* , [2 x i32]** %30
    %54 = getelementptr [2 x i32], [2 x i32]* %53, i32 %45
    %55 = getelementptr [2 x i32], [2 x i32]* %54, i32 0, i32 %39
    %56 = load i32 , i32* %55
    %57 = mul i32 %52, %56
    %58 = srem i32 %57, 10007
    %59 = add i32 %44, %58
    %60 = srem i32 %59, 10007
    %61 = add i32 %45, 1
    move  %44, %60
    move  %45, %61
    br label %46
62:
    %63 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %31, i32 0, i32 %33
    %64 = getelementptr [2 x i32], [2 x i32]* %63, i32 0, i32 %39
    store i32 %44, i32* %64
    %65 = add i32 %39, 1
    move  %38, %44
    move  %39, %65
    move  %40, %45
    br label %41
66:
    %67 = add i32 %33, 1
    move  %32, %38
    move  %33, %67
    move  %34, %40
    br label %35
68:
    move  %69, 0
    move  %70, 0
    br label %71
71:
    %72 = icmp slt i32 %70, 2
    br i1 %72, label %73, label %87
73:
    move  %74, %69
    br label %75
75:
    %76 = icmp slt i32 %74, 2
    br i1 %76, label %77, label %85
77:
    %78 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %31, i32 0, i32 %70
    %79 = getelementptr [2 x i32], [2 x i32]* %78, i32 0, i32 %74
    %80 = load i32 , i32* %79
    %81 = load [2 x i32]* , [2 x i32]** %29
    %82 = getelementptr [2 x i32], [2 x i32]* %81, i32 %70
    %83 = getelementptr [2 x i32], [2 x i32]* %82, i32 0, i32 %74
    store i32 %80, i32* %83
    %84 = add i32 %74, 1
    move  %74, %84
    br label %75
85:
    %86 = add i32 %70, 1
    move  %69, %74
    move  %70, %86
    br label %71
87:
    br label %89
88:
    br label %89
89:
    %90 = load i32 , i32* @T
    %91 = sdiv i32 %90, 2
    store i32 %91, i32* @T
    %92 = alloca [2 x i32]*
    store [2 x i32]* %3, [2 x i32]** %92
    %93 = alloca [2 x i32]*
    store [2 x i32]* %3, [2 x i32]** %93
    %94 = alloca [2 x [2 x i32]]
    move  %95, 0
    move  %96, 0
    move  %97, 0
    br label %98
98:
    %99 = icmp slt i32 %96, 2
    br i1 %99, label %100, label %131
100:
    move  %101, %95
    move  %102, 0
    move  %103, %97
    br label %104
104:
    %105 = icmp slt i32 %102, 2
    br i1 %105, label %106, label %129
106:
    move  %107, 0
    move  %108, 0
    br label %109
109:
    %110 = icmp slt i32 %108, 2
    br i1 %110, label %111, label %125
111:
    %112 = load [2 x i32]* , [2 x i32]** %92
    %113 = getelementptr [2 x i32], [2 x i32]* %112, i32 %96
    %114 = getelementptr [2 x i32], [2 x i32]* %113, i32 0, i32 %108
    %115 = load i32 , i32* %114
    %116 = load [2 x i32]* , [2 x i32]** %93
    %117 = getelementptr [2 x i32], [2 x i32]* %116, i32 %108
    %118 = getelementptr [2 x i32], [2 x i32]* %117, i32 0, i32 %102
    %119 = load i32 , i32* %118
    %120 = mul i32 %115, %119
    %121 = srem i32 %120, 10007
    %122 = add i32 %107, %121
    %123 = srem i32 %122, 10007
    %124 = add i32 %108, 1
    move  %107, %123
    move  %108, %124
    br label %109
125:
    %126 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %94, i32 0, i32 %96
    %127 = getelementptr [2 x i32], [2 x i32]* %126, i32 0, i32 %102
    store i32 %107, i32* %127
    %128 = add i32 %102, 1
    move  %101, %107
    move  %102, %128
    move  %103, %108
    br label %104
129:
    %130 = add i32 %96, 1
    move  %95, %101
    move  %96, %130
    move  %97, %103
    br label %98
131:
    move  %132, 0
    move  %133, 0
    br label %134
134:
    %135 = icmp slt i32 %133, 2
    br i1 %135, label %136, label %150
136:
    move  %137, %132
    br label %138
138:
    %139 = icmp slt i32 %137, 2
    br i1 %139, label %140, label %148
140:
    %141 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %94, i32 0, i32 %133
    %142 = getelementptr [2 x i32], [2 x i32]* %141, i32 0, i32 %137
    %143 = load i32 , i32* %142
    %144 = load [2 x i32]* , [2 x i32]** %92
    %145 = getelementptr [2 x i32], [2 x i32]* %144, i32 %133
    %146 = getelementptr [2 x i32], [2 x i32]* %145, i32 0, i32 %137
    store i32 %143, i32* %146
    %147 = add i32 %137, 1
    move  %137, %147
    br label %138
148:
    %149 = add i32 %133, 1
    move  %132, %137
    move  %133, %149
    br label %134
150:
    br label %151
151:
    br label %18
152:
    move  %153, 0
    br label %154
154:
    %155 = icmp slt i32 %153, 2
    br i1 %155, label %156, label %176
156:
    %157 = getelementptr [2 x i32], [2 x i32]* @f, i32 0, i32 %153
    %158 = load i32 , i32* %157
    %159 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @ori, i32 0, i32 %153
    %160 = getelementptr [2 x i32], [2 x i32]* %159, i32 0, i32 0
    %161 = alloca i32*
    store i32* %160, i32** %161
    move  %162, 0
    move  %163, 0
    br label %164
164:
    %165 = icmp slt i32 %163, 2
    br i1 %165, label %166, label %172
166:
    %167 = load i32* , i32** %161
    %168 = getelementptr i32, i32* %167, i32 %163
    %169 = load i32 , i32* %168
    %170 = add i32 %162, %169
    %171 = add i32 %163, 1
    move  %162, %170
    move  %163, %171
    br label %164
172:
    move  %173, %162
    call void @putch(i32 102)
    call void @putint(i32 %158)
    call void @putch(i32 58)
    call void @putch(i32 32)
    call void @putint(i32 %173)
    call void @putch(i32 10)
    %174 = add i32 %153, 1
    br label %175
175:
    move  %153, %174
    br label %154
176:
    %177 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @ori, i32 0, i32 0
    %178 = getelementptr [2 x i32], [2 x i32]* %177, i32 0, i32 0
    %179 = load i32 , i32* %178
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 105)
    call void @putch(i32 48)
    call void @putch(i32 48)
    call void @putch(i32 58)
    call void @putint(i32 %179)
    call void @putch(i32 10)
    ret i32 0
}


