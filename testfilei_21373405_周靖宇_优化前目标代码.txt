.data
global_N:	.word 	10
global_a:		.word 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
str_0:	.asciiz   ", "
str_1:	.asciiz   "\n"
str_2:	.asciiz   ", "
str_3:	.asciiz   ", "
str_4:	.asciiz   "\n"
.text
	jal	entry
	j	end
func_fib:
fib_0:
	# %2 = alloca i32
	addi	$t0, $sp, -4
	# store i32 %0, i32* %2
	sw	$a0, 0($t0)
	# %3 = load i32 , i32* %2
	lw	$t1, 0($t0)
	# %4 = icmp eq i32 %3, 1
	li	$k1, 1
	seq	$t2, $t1, $k1
	# br i1 %4, label %5, label %7
	beq	$zero, $t2, fib_3

fib_1:
	# ret i32 1
	li	$v0, 1
	jr	$ra

fib_2:
	# br label %7

fib_3:
	# %8 = load i32 , i32* %2
	lw	$t3, 0($t0)
	# %9 = icmp eq i32 %8, 2
	li	$k1, 2
	seq	$t4, $t3, $k1
	# br i1 %9, label %10, label %12
	beq	$zero, $t4, fib_6

fib_4:
	# ret i32 2
	li	$v0, 2
	jr	$ra

fib_5:
	# br label %12

fib_6:
	# %13 = load i32 , i32* %2
	lw	$t5, 0($t0)
	# %14 = sub i32 %13, 1
	subiu	$t6, $t5, 1
	# %15 = call i32 @fib(i32 %14)
	sw	$t0, -8($sp)
	sw	$t1, -12($sp)
	sw	$t2, -16($sp)
	sw	$t3, -20($sp)
	sw	$t4, -24($sp)
	sw	$t5, -28($sp)
	sw	$t6, -32($sp)
	sw	$t7, -36($sp)
	sw	$a0, -40($sp)
	lw	$a0, -32($sp)
	sw	$ra, -44($sp)
	sw	$sp, -48($sp)
	addi	$sp, $sp, -48
	jal	func_fib
	lw	$t0, 40($sp)
	lw	$t1, 36($sp)
	lw	$t2, 32($sp)
	lw	$t3, 28($sp)
	lw	$t4, 24($sp)
	lw	$t5, 20($sp)
	lw	$t6, 16($sp)
	lw	$t7, 12($sp)
	lw	$a0, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$t7, $v0
	# %16 = load i32 , i32* %2
	lw	$s0, 0($t0)
	# %17 = sub i32 %16, 2
	subiu	$s1, $s0, 2
	# %18 = call i32 @fib(i32 %17)
	sw	$t0, -52($sp)
	sw	$t1, -56($sp)
	sw	$t2, -60($sp)
	sw	$t3, -64($sp)
	sw	$t4, -68($sp)
	sw	$t5, -72($sp)
	sw	$t6, -76($sp)
	sw	$t7, -80($sp)
	sw	$s0, -84($sp)
	sw	$s1, -88($sp)
	sw	$s2, -92($sp)
	sw	$a0, -96($sp)
	lw	$a0, -88($sp)
	sw	$ra, -100($sp)
	sw	$sp, -104($sp)
	addi	$sp, $sp, -104
	jal	func_fib
	lw	$t0, 52($sp)
	lw	$t1, 48($sp)
	lw	$t2, 44($sp)
	lw	$t3, 40($sp)
	lw	$t4, 36($sp)
	lw	$t5, 32($sp)
	lw	$t6, 28($sp)
	lw	$t7, 24($sp)
	lw	$s0, 20($sp)
	lw	$s1, 16($sp)
	lw	$s2, 12($sp)
	lw	$a0, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$s2, $v0
	# %19 = add i32 %15, %18
	addu	$s3, $t7, $s2
	# ret i32 %19
	move	$v0, $s3
	jr	$ra

fib_7:


entry:
func_main:
main_0:
	# %1 = alloca i32
	addi	$t0, $sp, -4
	# store i32 2, i32* %1
	li	$k0, 2
	sw	$k0, 0($t0)
	# %2 = alloca i32
	addi	$t1, $sp, -8
	# store i32 5, i32* %2
	li	$k0, 5
	sw	$k0, 0($t1)
	# %3 = alloca i32
	addi	$t2, $sp, -12
	# store i32 1, i32* %3
	li	$k0, 1
	sw	$k0, 0($t2)
	# %4 = alloca i32
	addi	$t3, $sp, -16
	# store i32 2, i32* %4
	li	$k0, 2
	sw	$k0, 0($t3)
	# %5 = call i32 @getint()
	li	$v0, 5
	syscall
	move	$t4, $v0
	# store i32 %5, i32* %1
	sw	$t4, 0($t0)
	# %6 = call i32 @getint()
	li	$v0, 5
	syscall
	move	$t5, $v0
	# store i32 %6, i32* %2
	sw	$t5, 0($t1)
	# %7 = load i32 , i32* %1
	lw	$t6, 0($t0)
	# %8 = load i32 , i32* %2
	lw	$t7, 0($t1)
	# %9 = mul i32 %7, %8
	mult	$t6, $t7
	mflo	$s0
	# %10 = sub i32 0, %9
	subu	$s1, $zero, $s0
	# %11 = call i32 @fib(i32 4)
	sw	$t0, -20($sp)
	sw	$t1, -24($sp)
	sw	$t2, -28($sp)
	sw	$t3, -32($sp)
	sw	$t4, -36($sp)
	sw	$t5, -40($sp)
	sw	$t6, -44($sp)
	sw	$t7, -48($sp)
	sw	$s0, -52($sp)
	sw	$s1, -56($sp)
	sw	$s2, -60($sp)
	li	$a0, 4
	sw	$ra, -64($sp)
	sw	$sp, -68($sp)
	addi	$sp, $sp, -68
	jal	func_fib
	lw	$t0, 48($sp)
	lw	$t1, 44($sp)
	lw	$t2, 40($sp)
	lw	$t3, 36($sp)
	lw	$t4, 32($sp)
	lw	$t5, 28($sp)
	lw	$t6, 24($sp)
	lw	$t7, 20($sp)
	lw	$s0, 16($sp)
	lw	$s1, 12($sp)
	lw	$s2, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$s2, $v0
	# %12 = mul i32 %10, %11
	mult	$s1, $s2
	mflo	$s3
	# %13 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	la	$k0, global_a
	addiu	$s4, $k0, 4
	# %14 = load i32 , i32* %13
	lw	$s5, 0($s4)
	# %15 = add i32 %12, %14
	addu	$s6, $s3, $s5
	# %16 = mul i32 %15, 5
	li	$k1, 5
	mult	$s6, $k1
	mflo	$s7
	# store i32 %16, i32* %1
	sw	$s7, 0($t0)
	# %17 = call i32 @fib(i32 5)
	sw	$t0, -72($sp)
	sw	$t1, -76($sp)
	sw	$t2, -80($sp)
	sw	$t3, -84($sp)
	sw	$t4, -88($sp)
	sw	$t5, -92($sp)
	sw	$t6, -96($sp)
	sw	$t7, -100($sp)
	sw	$s0, -104($sp)
	sw	$s1, -108($sp)
	sw	$s2, -112($sp)
	sw	$s3, -116($sp)
	sw	$s4, -120($sp)
	sw	$s5, -124($sp)
	sw	$s6, -128($sp)
	sw	$s7, -132($sp)
	sw	$t8, -136($sp)
	li	$a0, 5
	sw	$ra, -140($sp)
	sw	$sp, -144($sp)
	addi	$sp, $sp, -144
	jal	func_fib
	lw	$t0, 72($sp)
	lw	$t1, 68($sp)
	lw	$t2, 64($sp)
	lw	$t3, 60($sp)
	lw	$t4, 56($sp)
	lw	$t5, 52($sp)
	lw	$t6, 48($sp)
	lw	$t7, 44($sp)
	lw	$s0, 40($sp)
	lw	$s1, 36($sp)
	lw	$s2, 32($sp)
	lw	$s3, 28($sp)
	lw	$s4, 24($sp)
	lw	$s5, 20($sp)
	lw	$s6, 16($sp)
	lw	$s7, 12($sp)
	lw	$t8, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$t8, $v0
	# %18 = add i32 %17, 2
	addiu	$t9, $t8, 2
	# %19 = call i32 @fib(i32 %18)
	sw	$t0, -152($sp)
	sw	$t1, -156($sp)
	sw	$t2, -160($sp)
	sw	$t3, -164($sp)
	sw	$t4, -168($sp)
	sw	$t5, -172($sp)
	sw	$t6, -176($sp)
	sw	$t7, -180($sp)
	sw	$s0, -184($sp)
	sw	$s1, -188($sp)
	sw	$s2, -192($sp)
	sw	$s3, -196($sp)
	sw	$s4, -200($sp)
	sw	$s5, -204($sp)
	sw	$s6, -208($sp)
	sw	$s7, -212($sp)
	sw	$t8, -216($sp)
	sw	$t9, -220($sp)
	lw	$a0, -220($sp)
	sw	$ra, -224($sp)
	sw	$sp, -228($sp)
	addi	$sp, $sp, -228
	jal	func_fib
	lw	$t0, 76($sp)
	lw	$t1, 72($sp)
	lw	$t2, 68($sp)
	lw	$t3, 64($sp)
	lw	$t4, 60($sp)
	lw	$t5, 56($sp)
	lw	$t6, 52($sp)
	lw	$t7, 48($sp)
	lw	$s0, 44($sp)
	lw	$s1, 40($sp)
	lw	$s2, 36($sp)
	lw	$s3, 32($sp)
	lw	$s4, 28($sp)
	lw	$s5, 24($sp)
	lw	$s6, 20($sp)
	lw	$s7, 16($sp)
	lw	$t8, 12($sp)
	lw	$t9, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	sw	$v0, -148($sp)
	# %20 = sub i32 1197, %19
	lw	$k0, -148($sp)
	subiu	$k0, $k0, 1197
	subu	$k0, $zero, $k0
	sw	$k0, -232($sp)
	# %21 = load i32 , i32* %3
	lw	$k0, 0($t2)
	sw	$k0, -236($sp)
	# %22 = load i32 , i32* %4
	lw	$k0, 0($t3)
	sw	$k0, -240($sp)
	# %23 = add i32 %21, %22
	lw	$k0, -236($sp)
	lw	$k1, -240($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -244($sp)
	# %24 = sub i32 %23, 9186
	lw	$k0, -244($sp)
	subiu	$k0, $k0, 9186
	sw	$k0, -248($sp)
	# %25 = sub i32 %24, 908
	lw	$k0, -248($sp)
	subiu	$k0, $k0, 908
	sw	$k0, -252($sp)
	# %26 = add i32 %20, %25
	lw	$k0, -232($sp)
	lw	$k1, -252($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -256($sp)
	# store i32 %26, i32* %2
	lw	$k0, -256($sp)
	sw	$k0, 0($t1)
	# %27 = alloca i32
	addi	$k0, $sp, -260
	sw	$k0, -264($sp)
	# store i32 -6, i32* %27
	li	$k0, -6
	lw	$k1, -264($sp)
	sw	$k0, 0($k1)
	# br label %28

main_1:
	# %29 = load i32 , i32* %1
	lw	$k0, 0($t0)
	sw	$k0, -268($sp)
	# %30 = icmp slt i32 %29, 100
	lw	$k0, -268($sp)
	li	$k1, 100
	slt	$k0, $k0, $k1
	sw	$k0, -272($sp)
	# br i1 %30, label %31, label %105
	lw	$k0, -272($sp)
	beq	$zero, $k0, main_4

main_2:
	# %32 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	la	$k0, global_a
	move	$k0, $k0
	sw	$k0, -276($sp)
	# %33 = load i32 , i32* %32
	lw	$k0, -276($sp)
	lw	$k1, 0($k0)
	sw	$k1, -280($sp)
	# %34 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -284($sp)
	# %35 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -288($sp)
	# %36 = mul i32 %34, %35
	lw	$k0, -284($sp)
	lw	$k1, -288($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -292($sp)
	# %37 = add i32 %33, %36
	lw	$k0, -280($sp)
	lw	$k1, -292($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -296($sp)
	# %38 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	la	$k0, global_a
	move	$k0, $k0
	sw	$k0, -300($sp)
	# store i32 %37, i32* %38
	lw	$k0, -296($sp)
	lw	$k1, -300($sp)
	sw	$k0, 0($k1)
	# %39 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	la	$k0, global_a
	addiu	$k0, $k0, 4
	sw	$k0, -304($sp)
	# %40 = load i32 , i32* %39
	lw	$k0, -304($sp)
	lw	$k1, 0($k0)
	sw	$k1, -308($sp)
	# %41 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -312($sp)
	# %42 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -316($sp)
	# %43 = mul i32 %41, %42
	lw	$k0, -312($sp)
	lw	$k1, -316($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -320($sp)
	# %44 = add i32 %40, %43
	lw	$k0, -308($sp)
	lw	$k1, -320($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -324($sp)
	# %45 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	la	$k0, global_a
	addiu	$k0, $k0, 4
	sw	$k0, -328($sp)
	# store i32 %44, i32* %45
	lw	$k0, -324($sp)
	lw	$k1, -328($sp)
	sw	$k0, 0($k1)
	# %46 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	la	$k0, global_a
	addiu	$k0, $k0, 8
	sw	$k0, -332($sp)
	# %47 = load i32 , i32* %46
	lw	$k0, -332($sp)
	lw	$k1, 0($k0)
	sw	$k1, -336($sp)
	# %48 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -340($sp)
	# %49 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -344($sp)
	# %50 = mul i32 %48, %49
	lw	$k0, -340($sp)
	lw	$k1, -344($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -348($sp)
	# %51 = add i32 %47, %50
	lw	$k0, -336($sp)
	lw	$k1, -348($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -352($sp)
	# %52 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	la	$k0, global_a
	addiu	$k0, $k0, 8
	sw	$k0, -356($sp)
	# store i32 %51, i32* %52
	lw	$k0, -352($sp)
	lw	$k1, -356($sp)
	sw	$k0, 0($k1)
	# %53 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	la	$k0, global_a
	addiu	$k0, $k0, 12
	sw	$k0, -360($sp)
	# %54 = load i32 , i32* %53
	lw	$k0, -360($sp)
	lw	$k1, 0($k0)
	sw	$k1, -364($sp)
	# %55 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -368($sp)
	# %56 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -372($sp)
	# %57 = mul i32 %55, %56
	lw	$k0, -368($sp)
	lw	$k1, -372($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -376($sp)
	# %58 = add i32 %54, %57
	lw	$k0, -364($sp)
	lw	$k1, -376($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -380($sp)
	# %59 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	la	$k0, global_a
	addiu	$k0, $k0, 12
	sw	$k0, -384($sp)
	# store i32 %58, i32* %59
	lw	$k0, -380($sp)
	lw	$k1, -384($sp)
	sw	$k0, 0($k1)
	# %60 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	la	$k0, global_a
	addiu	$k0, $k0, 16
	sw	$k0, -388($sp)
	# %61 = load i32 , i32* %60
	lw	$k0, -388($sp)
	lw	$k1, 0($k0)
	sw	$k1, -392($sp)
	# %62 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -396($sp)
	# %63 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -400($sp)
	# %64 = mul i32 %62, %63
	lw	$k0, -396($sp)
	lw	$k1, -400($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -404($sp)
	# %65 = add i32 %61, %64
	lw	$k0, -392($sp)
	lw	$k1, -404($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -408($sp)
	# %66 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	la	$k0, global_a
	addiu	$k0, $k0, 16
	sw	$k0, -412($sp)
	# store i32 %65, i32* %66
	lw	$k0, -408($sp)
	lw	$k1, -412($sp)
	sw	$k0, 0($k1)
	# %67 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	la	$k0, global_a
	addiu	$k0, $k0, 20
	sw	$k0, -416($sp)
	# %68 = load i32 , i32* %67
	lw	$k0, -416($sp)
	lw	$k1, 0($k0)
	sw	$k1, -420($sp)
	# %69 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -424($sp)
	# %70 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -428($sp)
	# %71 = mul i32 %69, %70
	lw	$k0, -424($sp)
	lw	$k1, -428($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -432($sp)
	# %72 = add i32 %68, %71
	lw	$k0, -420($sp)
	lw	$k1, -432($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -436($sp)
	# %73 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	la	$k0, global_a
	addiu	$k0, $k0, 20
	sw	$k0, -440($sp)
	# store i32 %72, i32* %73
	lw	$k0, -436($sp)
	lw	$k1, -440($sp)
	sw	$k0, 0($k1)
	# %74 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	la	$k0, global_a
	addiu	$k0, $k0, 24
	sw	$k0, -444($sp)
	# %75 = load i32 , i32* %74
	lw	$k0, -444($sp)
	lw	$k1, 0($k0)
	sw	$k1, -448($sp)
	# %76 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -452($sp)
	# %77 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -456($sp)
	# %78 = mul i32 %76, %77
	lw	$k0, -452($sp)
	lw	$k1, -456($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -460($sp)
	# %79 = add i32 %75, %78
	lw	$k0, -448($sp)
	lw	$k1, -460($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -464($sp)
	# %80 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	la	$k0, global_a
	addiu	$k0, $k0, 24
	sw	$k0, -468($sp)
	# store i32 %79, i32* %80
	lw	$k0, -464($sp)
	lw	$k1, -468($sp)
	sw	$k0, 0($k1)
	# %81 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	la	$k0, global_a
	addiu	$k0, $k0, 28
	sw	$k0, -472($sp)
	# %82 = load i32 , i32* %81
	lw	$k0, -472($sp)
	lw	$k1, 0($k0)
	sw	$k1, -476($sp)
	# %83 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -480($sp)
	# %84 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -484($sp)
	# %85 = mul i32 %83, %84
	lw	$k0, -480($sp)
	lw	$k1, -484($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -488($sp)
	# %86 = add i32 %82, %85
	lw	$k0, -476($sp)
	lw	$k1, -488($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -492($sp)
	# %87 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	la	$k0, global_a
	addiu	$k0, $k0, 28
	sw	$k0, -496($sp)
	# store i32 %86, i32* %87
	lw	$k0, -492($sp)
	lw	$k1, -496($sp)
	sw	$k0, 0($k1)
	# %88 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	la	$k0, global_a
	addiu	$k0, $k0, 32
	sw	$k0, -500($sp)
	# %89 = load i32 , i32* %88
	lw	$k0, -500($sp)
	lw	$k1, 0($k0)
	sw	$k1, -504($sp)
	# %90 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -508($sp)
	# %91 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -512($sp)
	# %92 = mul i32 %90, %91
	lw	$k0, -508($sp)
	lw	$k1, -512($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -516($sp)
	# %93 = add i32 %89, %92
	lw	$k0, -504($sp)
	lw	$k1, -516($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -520($sp)
	# %94 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	la	$k0, global_a
	addiu	$k0, $k0, 32
	sw	$k0, -524($sp)
	# store i32 %93, i32* %94
	lw	$k0, -520($sp)
	lw	$k1, -524($sp)
	sw	$k0, 0($k1)
	# %95 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	la	$k0, global_a
	addiu	$k0, $k0, 36
	sw	$k0, -528($sp)
	# %96 = load i32 , i32* %95
	lw	$k0, -528($sp)
	lw	$k1, 0($k0)
	sw	$k1, -532($sp)
	# %97 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -536($sp)
	# %98 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -540($sp)
	# %99 = mul i32 %97, %98
	lw	$k0, -536($sp)
	lw	$k1, -540($sp)
	mult	$k0, $k1
	mflo	$k0
	sw	$k0, -544($sp)
	# %100 = add i32 %96, %99
	lw	$k0, -532($sp)
	lw	$k1, -544($sp)
	addu	$k0, $k0, $k1
	sw	$k0, -548($sp)
	# %101 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	la	$k0, global_a
	addiu	$k0, $k0, 36
	sw	$k0, -552($sp)
	# store i32 %100, i32* %101
	lw	$k0, -548($sp)
	lw	$k1, -552($sp)
	sw	$k0, 0($k1)
	# br label %102

main_3:
	# %103 = load i32 , i32* %1
	lw	$k0, 0($t0)
	sw	$k0, -556($sp)
	# %104 = add i32 %103, 1
	lw	$k0, -556($sp)
	addiu	$k0, $k0, 1
	sw	$k0, -560($sp)
	# store i32 %104, i32* %1
	lw	$k0, -560($sp)
	sw	$k0, 0($t0)
	# br label %28
	j	main_1

main_4:
	# store i32 0, i32* %1
	sw	$zero, 0($t0)
	# br label %106

main_5:
	# %107 = load i32 , i32* %1
	lw	$k0, 0($t0)
	sw	$k0, -564($sp)
	# %108 = icmp slt i32 %107, 10
	lw	$k0, -564($sp)
	li	$k1, 10
	slt	$k0, $k0, $k1
	sw	$k0, -568($sp)
	# br i1 %108, label %109, label %116
	lw	$k0, -568($sp)
	beq	$zero, $k0, main_8

main_6:
	# %110 = load i32 , i32* %1
	lw	$k0, 0($t0)
	sw	$k0, -572($sp)
	# %111 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %110
	lw	$k0, -572($sp)
	li	$k1, 4
	mult	$k0, $k1
	mflo	$k1
	la	$k0, global_a
	addu	$k0, $k0, $k1
	sw	$k0, -576($sp)
	# %112 = load i32 , i32* %111
	lw	$k0, -576($sp)
	lw	$k1, 0($k0)
	sw	$k1, -580($sp)
	# call void @putint(i32 %112)
	sw	$a0, -584($sp)
	lw	$a0, -580($sp)
	li	$v0, 1
	syscall
	lw	$a0, -584($sp)
	# call void @putch(i32 44)
	sw	$a0, -584($sp)
	la	$a0, str_0
	li	$v0, 4
	syscall
	lw	$a0, -584($sp)
	# %113 = load i32 , i32* %1
	lw	$k0, 0($t0)
	sw	$k0, -584($sp)
	# %114 = add i32 %113, 1
	lw	$k0, -584($sp)
	addiu	$k0, $k0, 1
	sw	$k0, -588($sp)
	# store i32 %114, i32* %1
	lw	$k0, -588($sp)
	sw	$k0, 0($t0)
	# br label %115

main_7:
	# br label %106
	j	main_5

main_8:
	# %117 = load i32 , i32* %1
	lw	$k0, 0($t0)
	sw	$k0, -592($sp)
	# %118 = load i32 , i32* %2
	lw	$k0, 0($t1)
	sw	$k0, -596($sp)
	# %119 = load i32 , i32* %27
	lw	$k0, -264($sp)
	lw	$k1, 0($k0)
	sw	$k1, -600($sp)
	# call void @putch(i32 10)
	sw	$a0, -604($sp)
	la	$a0, str_1
	li	$v0, 4
	syscall
	lw	$a0, -604($sp)
	# call void @putint(i32 %117)
	sw	$a0, -604($sp)
	lw	$a0, -592($sp)
	li	$v0, 1
	syscall
	lw	$a0, -604($sp)
	# call void @putch(i32 44)
	sw	$a0, -604($sp)
	la	$a0, str_2
	li	$v0, 4
	syscall
	lw	$a0, -604($sp)
	# call void @putint(i32 %118)
	sw	$a0, -604($sp)
	lw	$a0, -596($sp)
	li	$v0, 1
	syscall
	lw	$a0, -604($sp)
	# call void @putch(i32 44)
	sw	$a0, -604($sp)
	la	$a0, str_3
	li	$v0, 4
	syscall
	lw	$a0, -604($sp)
	# call void @putint(i32 %119)
	sw	$a0, -604($sp)
	lw	$a0, -600($sp)
	li	$v0, 1
	syscall
	lw	$a0, -604($sp)
	# call void @putch(i32 10)
	sw	$a0, -604($sp)
	la	$a0, str_4
	li	$v0, 4
	syscall
	lw	$a0, -604($sp)
	# ret i32 0
	move	$v0, $zero
	jr	$ra

main_9:
end:


