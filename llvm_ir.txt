declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@_a = dso_local constant i32 0
@HelLo_World = dso_local constant [5 x i32] [i32 1 ,i32 55 ,i32 0 ,i32 10 ,i32 9999 ]
@a_r__r = dso_local constant [2 x[2 x i32] ] [ [2 x i32 ] [i32 -1 ,i32 0],  [2 x i32 ] [i32 6 ,i32 -555]]
@_A = dso_local constant i32 6
@B = dso_local constant [1 x[1 x i32] ] [ [1 x i32 ] [i32 9966]]
@_ = dso_local constant i32 12
@c = dso_local constant [1 x i32] [i32 555 ]
@__ = dso_local constant i32 4
@con_6 = dso_local constant [2 x[1 x i32] ] [[ 1 x i32] zeroinitializer,  [1 x i32 ] [i32 6]]
@lll = dso_local constant i32 1
@rrr = dso_local constant i32 2
@awk_ = dso_local constant i32 11
@const_num = dso_local constant i32 5
@yyy = dso_local constant [2 x[3 x i32] ] [ [3 x i32 ] [i32 1 ,i32 0 ,i32 2],  [3 x i32 ] [i32 -1 ,i32 3 ,i32 -4]]
@var_1 = dso_local global i32 0
@var_2 = dso_local global [100 x i32] zeroinitializer
@var_3 = dso_local global [2 x [12 x i32]] zeroinitializer
@varr_1 = dso_local global i32 0
@varr_2 = dso_local global i32 10
@varr_3 = dso_local global [2 x i32] zeroinitializer
@varr_4 = dso_local global [5 x [999 x i32]] zeroinitializer
@varrr_1 = dso_local global i32 10
@varrr_2 = dso_local global [2 x i32] [i32 1 ,i32 2 ]
@varrr_3 = dso_local global [2 x[2 x i32] ] [ [2 x i32 ] [i32 6 ,i32 6],  [2 x i32 ] [i32 -1 ,i32 0]]
@varrrr_1 = dso_local global i32 666
@varrrr_2 = dso_local global i32 0
@varrrr_3 = dso_local global [5 x i32] [i32 1 ,i32 5 ,i32 1 ,i32 96 ,i32 -5 ]
@varrrr_4 = dso_local global [1 x[2 x i32] ] [ [2 x i32 ] [i32 555 ,i32 -5]]
define dso_local i32 @main() {
0:
    br label %105
1:
    %2 = alloca i32*
    store i32* %110, i32** %2
    %3 = load i32* , i32** %2
    %4 = getelementptr i32, i32* %3, i32 0
    store i32 46554646, i32* %4
    %5 = icmp eq i32 5, 5
    br i1 %5, label %6, label %7
6:
    br label %7
7:
    %8 = icmp slt i32 5, 10
    br i1 %8, label %9, label %10
9:
    br label %14
10:
    %11 = load i32* , i32** %2
    %12 = getelementptr i32, i32* %11, i32 1
    %13 = load i32 , i32* %12
    br label %14
14:
    %15 = phi i32 [ 1000, %9 ], [ %13, %10 ]  ;16
    br label %103
16:
    %17 = alloca [3 x i32]*
    store [3 x i32]* %104, [3 x i32]** %17
    %18 = load [3 x i32]* , [3 x i32]** %17
    %19 = getelementptr [3 x i32], [3 x i32]* %18, i32 0
    %20 = getelementptr [3 x i32], [3 x i32]* %19, i32 0, i32 0
    %21 = load i32 , i32* %20
    %22 = icmp sgt i32 %21, 10
    br i1 %22, label %23, label %24
23:
    br label %98
24:
    br label %25
25:
    br label %26
26:
    %27 = phi i32 [ 0, %25 ], [ %36, %35 ]  ;19
    %28 = icmp slt i32 %27, 100
    br i1 %28, label %29, label %38
29:
    %30 = icmp eq i32 %27, 50
    br i1 %30, label %31, label %35
31:
    %32 = load [3 x i32]* , [3 x i32]** %17
    %33 = getelementptr [3 x i32], [3 x i32]* %32, i32 0
    %34 = getelementptr [3 x i32], [3 x i32]* %33, i32 0, i32 0
    store i32 1, i32* %34
    br label %38
35:
    %36 = add i32 %27, 1
    br label %37
37:
    br label %26
38:
    br label %98
39:
    %40 = alloca i32*
    store i32* %101, i32** %40
    %41 = alloca [3 x i32]*
    store [3 x i32]* %102, [3 x i32]** %41
    %42 = load i32* , i32** %40
    %43 = getelementptr i32, i32* %42, i32 0
    %44 = load i32 , i32* %43
    %45 = load [3 x i32]* , [3 x i32]** %41
    %46 = getelementptr [3 x i32], [3 x i32]* %45, i32 0
    %47 = getelementptr [3 x i32], [3 x i32]* %46, i32 0, i32 1
    %48 = load i32 , i32* %47
    %49 = load i32* , i32** %40
    %50 = getelementptr i32, i32* %49, i32 1
    %51 = load i32 , i32* %50
    %52 = add i32 %132, %51
    %53 = load [3 x i32]* , [3 x i32]** %41
    %54 = getelementptr [3 x i32], [3 x i32]* %53, i32 0
    %55 = getelementptr [3 x i32], [3 x i32]* %54, i32 0, i32 0
    %56 = load i32 , i32* %55
    %57 = add i32 %52, %56
    %58 = add i32 1, %132
    %59 = sub i32 0, %58
    %60 = add i32 1, %132
    %61 = add i32 %60, 44
    %62 = add i32 %61, 3
    %63 = add i32 %59, %62
    %64 = mul i32 6, %132
    br label %97
65:
    %66 = icmp eq i32 1, 2
    br i1 %66, label %71, label %67
67:
    %68 = icmp ne i32 2, 0
    br i1 %68, label %69, label %72
69:
    %70 = icmp eq i32 6671, 4
    br i1 %70, label %71, label %72
71:
    br label %96
72:
    %73 = icmp ne i32 0, -12
    br i1 %73, label %74, label %75
74:
    br label %96
75:
    %76 = getelementptr [2 x [12 x i32]], [2 x [12 x i32]]* @var_3, i32 0, i32 1
    %77 = getelementptr [12 x i32], [12 x i32]* %76, i32 0, i32 1
    %78 = load i32 , i32* %77
    %79 = mul i32 55, %78
    %80 = icmp sle i32 4, %79
    br i1 %80, label %85, label %81
81:
    %82 = icmp sge i32 2, 54564
    br i1 %82, label %85, label %83
83:
    %84 = icmp eq i32 -1, 6
    br i1 %84, label %85, label %86
85:
    br label %96
86:
    %87 = icmp ne i32 1, 0
    br i1 %87, label %94, label %88
88:
    %89 = load i32 , i32* @varrrr_2
    %90 = add i32 2, %89
    %91 = icmp slt i32 1, %90
    br i1 %91, label %94, label %92
92:
    %93 = icmp sgt i32 8, 0
    br i1 %93, label %94, label %95
94:
    br label %96
95:
    br label %96
96:
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    call void @putint(i32 1)
    call void @putch(i32 10)
    ret i32 0
97:
    br label %65
98:
    %99 = call i32 @getint()
    %100 = getelementptr [4 x i32], [4 x i32]* %123, i32 0, i32 1
    store i32 %99, i32* %100
    %101 = getelementptr [4 x i32], [4 x i32]* %123, i32 0, i32 0
    %102 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 0
    br label %39
103:
    %104 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 0
    br label %16
105:
    %106 = call i32 @getint()
    %107 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 1
    %108 = getelementptr [3 x i32], [3 x i32]* %107, i32 0, i32 2
    store i32 %106, i32* %108
    %109 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 1
    %110 = getelementptr [3 x i32], [3 x i32]* %109, i32 0, i32 0
    br label %1
    %112 = alloca [2 x [3 x i32]]
    %113 = load i32 , i32* @varrrr_1
    %114 = sdiv i32 5555, %113
    %115 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 0
    %116 = getelementptr [3 x i32], [3 x i32]* %115, i32 0, i32 0
    store i32 0, i32* %116
    %117 = getelementptr [3 x i32], [3 x i32]* %115, i32 0, i32 1
    store i32 16, i32* %117
    %118 = getelementptr [3 x i32], [3 x i32]* %115, i32 0, i32 2
    store i32 3, i32* %118
    %119 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 1
    %120 = getelementptr [3 x i32], [3 x i32]* %119, i32 0, i32 0
    store i32 678, i32* %120
    %121 = getelementptr [3 x i32], [3 x i32]* %119, i32 0, i32 1
    store i32 %114, i32* %121
    %122 = getelementptr [3 x i32], [3 x i32]* %119, i32 0, i32 2
    store i32 0, i32* %122
    %123 = alloca [4 x i32]
    %124 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %112, i32 0, i32 0
    %125 = getelementptr [3 x i32], [3 x i32]* %124, i32 0, i32 0
    %126 = load i32 , i32* %125
    %127 = mul i32 6, %126
    %128 = getelementptr [4 x i32], [4 x i32]* %123, i32 0, i32 0
    store i32 0, i32* %128
    %129 = getelementptr [4 x i32], [4 x i32]* %123, i32 0, i32 1
    store i32 %127, i32* %129
    %130 = getelementptr [4 x i32], [4 x i32]* %123, i32 0, i32 2
    store i32 5555, i32* %130
    %131 = getelementptr [4 x i32], [4 x i32]* %123, i32 0, i32 3
    store i32 -27, i32* %131
    %132 = call i32 @getint()
    %133 = load i32 , i32* @varr_2
    br label %0
}


