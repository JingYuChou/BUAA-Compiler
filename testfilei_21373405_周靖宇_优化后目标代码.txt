.data
global_N:	.word 	10
global_a:		.word 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
str_0:	.asciiz   ", "
str_1:	.asciiz   "\n"
str_2:	.asciiz   ", "
str_3:	.asciiz   ", "
str_4:	.asciiz   "\n"
.text
	jal	entry
	j	end
func_fib:
fib_0:
	# %2 = icmp eq i32 %0, 1
	li	$k1, 1
	seq	$t0, $a0, $k1
	# br i1 %2, label %3, label %4
	beq	$zero, $t0, fib_2

fib_1:
	# ret i32 1
	li	$v0, 1
	jr	$ra

fib_2:
	# %5 = icmp eq i32 %0, 2
	li	$k1, 2
	seq	$t0, $a0, $k1
	# br i1 %5, label %6, label %7
	beq	$zero, $t0, fib_4

fib_3:
	# ret i32 2
	li	$v0, 2
	jr	$ra

fib_4:
	# %8 = sub i32 %0, 1
	subiu	$t0, $a0, 1
	# %9 = call i32 @fib(i32 %8)
	sw	$t0, -4($sp)
	sw	$t1, -8($sp)
	sw	$a0, -12($sp)
	lw	$a0, -4($sp)
	sw	$ra, -16($sp)
	sw	$sp, -20($sp)
	addi	$sp, $sp, -20
	jal	func_fib
	lw	$t0, 16($sp)
	lw	$t1, 12($sp)
	lw	$a0, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$t1, $v0
	# %10 = sub i32 %0, 2
	subiu	$t2, $a0, 2
	# %11 = call i32 @fib(i32 %10)
	sw	$t0, -24($sp)
	sw	$t1, -28($sp)
	sw	$t2, -32($sp)
	sw	$t3, -36($sp)
	sw	$a0, -40($sp)
	lw	$a0, -32($sp)
	sw	$ra, -44($sp)
	sw	$sp, -48($sp)
	addi	$sp, $sp, -48
	jal	func_fib
	lw	$t0, 24($sp)
	lw	$t1, 20($sp)
	lw	$t2, 16($sp)
	lw	$t3, 12($sp)
	lw	$a0, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$t3, $v0
	# %12 = add i32 %9, %11
	addu	$t4, $t1, $t3
	# ret i32 %12
	move	$v0, $t4
	jr	$ra


entry:
func_main:
main_0:
	# %1 = call i32 @getint()
	li	$v0, 5
	syscall
	move	$t0, $v0
	# %2 = call i32 @getint()
	li	$v0, 5
	syscall
	move	$t1, $v0
	# %3 = mul i32 %1, %2
	mult	$t0, $t1
	mflo	$t2
	# %4 = sub i32 0, %3
	subu	$t3, $zero, $t2
	# %5 = call i32 @fib(i32 4)
	sw	$t0, -4($sp)
	sw	$t1, -8($sp)
	sw	$t2, -12($sp)
	sw	$t3, -16($sp)
	sw	$t4, -20($sp)
	li	$a0, 4
	sw	$ra, -24($sp)
	sw	$sp, -28($sp)
	addi	$sp, $sp, -28
	jal	func_fib
	lw	$t0, 24($sp)
	lw	$t1, 20($sp)
	lw	$t2, 16($sp)
	lw	$t3, 12($sp)
	lw	$t4, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$t4, $v0
	# %6 = mul i32 %4, %5
	mult	$t3, $t4
	mflo	$t5
	# %7 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	la	$k0, global_a
	addiu	$t6, $k0, 4
	# %8 = load i32 , i32* %7
	lw	$t7, 0($t6)
	# %9 = add i32 %6, %8
	addu	$s0, $t5, $t7
	# %10 = mul i32 %9, 5
	li	$k1, 5
	mult	$s0, $k1
	mflo	$s1
	# %11 = call i32 @fib(i32 5)
	sw	$t0, -32($sp)
	sw	$t1, -36($sp)
	sw	$t2, -40($sp)
	sw	$t3, -44($sp)
	sw	$t4, -48($sp)
	sw	$t5, -52($sp)
	sw	$t6, -56($sp)
	sw	$t7, -60($sp)
	sw	$s0, -64($sp)
	sw	$s1, -68($sp)
	sw	$s2, -72($sp)
	li	$a0, 5
	sw	$ra, -76($sp)
	sw	$sp, -80($sp)
	addi	$sp, $sp, -80
	jal	func_fib
	lw	$t0, 48($sp)
	lw	$t1, 44($sp)
	lw	$t2, 40($sp)
	lw	$t3, 36($sp)
	lw	$t4, 32($sp)
	lw	$t5, 28($sp)
	lw	$t6, 24($sp)
	lw	$t7, 20($sp)
	lw	$s0, 16($sp)
	lw	$s1, 12($sp)
	lw	$s2, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$s2, $v0
	# %12 = add i32 %11, 2
	addiu	$s3, $s2, 2
	# %13 = call i32 @fib(i32 %12)
	sw	$t0, -84($sp)
	sw	$t1, -88($sp)
	sw	$t2, -92($sp)
	sw	$t3, -96($sp)
	sw	$t4, -100($sp)
	sw	$t5, -104($sp)
	sw	$t6, -108($sp)
	sw	$t7, -112($sp)
	sw	$s0, -116($sp)
	sw	$s1, -120($sp)
	sw	$s2, -124($sp)
	sw	$s3, -128($sp)
	sw	$s4, -132($sp)
	lw	$a0, -128($sp)
	sw	$ra, -136($sp)
	sw	$sp, -140($sp)
	addi	$sp, $sp, -140
	jal	func_fib
	lw	$t0, 56($sp)
	lw	$t1, 52($sp)
	lw	$t2, 48($sp)
	lw	$t3, 44($sp)
	lw	$t4, 40($sp)
	lw	$t5, 36($sp)
	lw	$t6, 32($sp)
	lw	$t7, 28($sp)
	lw	$s0, 24($sp)
	lw	$s1, 20($sp)
	lw	$s2, 16($sp)
	lw	$s3, 12($sp)
	lw	$s4, 8($sp)
	lw	$ra, 4($sp)
	lw	$sp, 0($sp)
	move	$s4, $v0
	# %14 = sub i32 1197, %13
	subiu	$s5, $s4, 1197
	subu	$s5, $zero, $s5
	# %15 = add i32 %14, -10091
	addiu	$s6, $s5, -10091
	# move  %16, %10
	move	$t0, $s1
	# br label %17

main_1:
	# %18 = icmp slt i32 %16, 100
	li	$k1, 100
	slt	$t1, $t0, $k1
	# br i1 %18, label %19, label %50
	beq	$zero, $t1, main_3

main_2:
	# %20 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	la	$k0, global_a
	move	$t1, $k0
	# %21 = load i32 , i32* %20
	lw	$t2, 0($t1)
	# %22 = add i32 %21, 36
	addiu	$t3, $t2, 36
	# store i32 %22, i32* %20
	sw	$t3, 0($t1)
	# %23 = load i32 , i32* %7
	lw	$t4, 0($t6)
	# %24 = add i32 %23, 36
	addiu	$t5, $t4, 36
	# store i32 %24, i32* %7
	sw	$t5, 0($t6)
	# %25 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	la	$k0, global_a
	addiu	$t7, $k0, 8
	# %26 = load i32 , i32* %25
	lw	$s0, 0($t7)
	# %27 = add i32 %26, 36
	addiu	$s2, $s0, 36
	# store i32 %27, i32* %25
	sw	$s2, 0($t7)
	# %28 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	la	$k0, global_a
	addiu	$s3, $k0, 12
	# %29 = load i32 , i32* %28
	lw	$s4, 0($s3)
	# %30 = add i32 %29, 36
	addiu	$s5, $s4, 36
	# store i32 %30, i32* %28
	sw	$s5, 0($s3)
	# %31 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	la	$k0, global_a
	addiu	$s7, $k0, 16
	# %32 = load i32 , i32* %31
	lw	$t8, 0($s7)
	# %33 = add i32 %32, 36
	addiu	$t9, $t8, 36
	# store i32 %33, i32* %31
	sw	$t9, 0($s7)
	# %34 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	la	$k0, global_a
	addiu	$t2, $k0, 20
	# %35 = load i32 , i32* %34
	lw	$t3, 0($t2)
	# %36 = add i32 %35, 36
	addiu	$t1, $t3, 36
	# store i32 %36, i32* %34
	sw	$t1, 0($t2)
	# %37 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	la	$k0, global_a
	addiu	$t4, $k0, 24
	# %38 = load i32 , i32* %37
	lw	$t5, 0($t4)
	# %39 = add i32 %38, 36
	addiu	$s0, $t5, 36
	# store i32 %39, i32* %37
	sw	$s0, 0($t4)
	# %40 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	la	$k0, global_a
	addiu	$s2, $k0, 28
	# %41 = load i32 , i32* %40
	lw	$t7, 0($s2)
	# %42 = add i32 %41, 36
	addiu	$s4, $t7, 36
	# store i32 %42, i32* %40
	sw	$s4, 0($s2)
	# %43 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	la	$k0, global_a
	addiu	$s5, $k0, 32
	# %44 = load i32 , i32* %43
	lw	$s3, 0($s5)
	# %45 = add i32 %44, 36
	addiu	$t8, $s3, 36
	# store i32 %45, i32* %43
	sw	$t8, 0($s5)
	# %46 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	la	$k0, global_a
	addiu	$t9, $k0, 36
	# %47 = load i32 , i32* %46
	lw	$s7, 0($t9)
	# %48 = add i32 %47, 36
	addiu	$t3, $s7, 36
	# store i32 %48, i32* %46
	sw	$t3, 0($t9)
	# %49 = add i32 %16, 1
	addiu	$t1, $t0, 1
	# move  %16, %49
	move	$t0, $t1
	# br label %17
	j	main_1

main_3:
	# move  %51, 0
	move	$t0, $zero
	# br label %52

main_4:
	# %53 = icmp slt i32 %51, 10
	li	$k1, 10
	slt	$t1, $t0, $k1
	# br i1 %53, label %54, label %58
	beq	$zero, $t1, main_6

main_5:
	# %55 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %51
	li	$k1, 4
	mult	$t0, $k1
	mflo	$k1
	la	$k0, global_a
	addu	$t1, $k0, $k1
	# %56 = load i32 , i32* %55
	lw	$t2, 0($t1)
	# call void @putint(i32 %56)
	sw	$a0, -144($sp)
	move	$a0, $t2
	li	$v0, 1
	syscall
	lw	$a0, -144($sp)
	# call void @putch(i32 44)
	sw	$a0, -144($sp)
	la	$a0, str_0
	li	$v0, 4
	syscall
	lw	$a0, -144($sp)
	# %57 = add i32 %51, 1
	addiu	$t3, $t0, 1
	# move  %51, %57
	move	$t0, $t3
	# br label %52
	j	main_4

main_6:
	# call void @putch(i32 10)
	sw	$a0, -144($sp)
	la	$a0, str_1
	li	$v0, 4
	syscall
	lw	$a0, -144($sp)
	# call void @putint(i32 %51)
	sw	$a0, -144($sp)
	move	$a0, $t0
	li	$v0, 1
	syscall
	lw	$a0, -144($sp)
	# call void @putch(i32 44)
	sw	$a0, -144($sp)
	la	$a0, str_2
	li	$v0, 4
	syscall
	lw	$a0, -144($sp)
	# call void @putint(i32 %15)
	sw	$a0, -144($sp)
	move	$a0, $s6
	li	$v0, 1
	syscall
	lw	$a0, -144($sp)
	# call void @putch(i32 44)
	sw	$a0, -144($sp)
	la	$a0, str_3
	li	$v0, 4
	syscall
	lw	$a0, -144($sp)
	# call void @putint(i32 -6)
	sw	$a0, -144($sp)
	li	$a0, -6
	li	$v0, 1
	syscall
	lw	$a0, -144($sp)
	# call void @putch(i32 10)
	sw	$a0, -144($sp)
	la	$a0, str_4
	li	$v0, 4
	syscall
	lw	$a0, -144($sp)
	# ret i32 0
	move	$v0, $zero
	jr	$ra
end:


