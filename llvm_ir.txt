declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@ZERO = dso_local constant i32 0
@ONE = dso_local constant i32 1
@var2 = dso_local global i32 2
@var3 = dso_local global i32 3
define dso_local void @fun() {
    %1 = alloca i32
    store i32 1, i32* %1
    %2 = alloca i32
    store i32 1, i32* %2
    br label %3
3:
    %4 = load i32 , i32* %2
    %5 = icmp slt i32 %4, 1000
    br i1 %5, label %6, label %10
6:
    %7 = load i32 , i32* %2
    %8 = mul i32 %7, 2
    store i32 %8, i32* %2
    br label %9
9:
    br label %3
10:
    %11 = load i32 , i32* %2
    call void @putch(i32 10)
    call void @putint(i32 %11)
    ret void
12:
    ret void
}

define dso_local i32 @main() {
    call void @putch(i32 50)
    call void @putch(i32 49)
    call void @putch(i32 51)
    call void @putch(i32 55)
    call void @putch(i32 51)
    call void @putch(i32 52)
    call void @putch(i32 53)
    call void @putch(i32 55)
    call void @putch(i32 10)
    %1 = load i32 , i32* @var2
    %2 = add i32 0, %1
    %3 = load i32 , i32* @var3
    %4 = sub i32 %3, 1
    %5 = icmp eq i32 %2, %4
    br i1 %5, label %6, label %19
6:
    %7 = icmp ne i32 1, 0
    br i1 %7, label %8, label %19
8:
    %9 = icmp ne i32 0, 0
    br i1 %9, label %16, label %10
10:
    %11 = icmp eq i32 0, 0
    br i1 %11, label %12, label %17
12:
    %13 = load i32 , i32* @var2
    %14 = add i32 2, %13
    %15 = icmp slt i32 %14, 0
    br i1 %15, label %16, label %17
16:
    call void @putch(i32 69)
    call void @putch(i32 82)
    call void @putch(i32 82)
    call void @putch(i32 79)
    call void @putch(i32 82)
    call void @putch(i32 33)
    call void @putch(i32 10)
    br label %18
17:
    call void @putch(i32 65)
    call void @putch(i32 110)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 115)
    call void @putch(i32 117)
    call void @putch(i32 99)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 115)
    call void @putch(i32 33)
    call void @putch(i32 10)
    br label %18
18:
    br label %19
19:
    %20 = load i32 , i32* @var3
    %21 = icmp ne i32 %20, 3
    br i1 %21, label %26, label %22
22:
    %23 = load i32 , i32* @var2
    %24 = sub i32 %23, 22
    %25 = icmp eq i32 %24, -20
    br i1 %25, label %26, label %36
26:
    %27 = load i32 , i32* @var3
    %28 = add i32 -4, %27
    %29 = load i32 , i32* @var2
    %30 = add i32 %28, %29
    %31 = icmp sle i32 %30, 100
    br i1 %31, label %34, label %32
32:
    %33 = icmp ne i32 1, 0
    br i1 %33, label %34, label %35
34:
    call void @putch(i32 79)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 112)
    call void @putch(i32 97)
    call void @putch(i32 115)
    call void @putch(i32 115)
    call void @putch(i32 33)
    call void @putch(i32 10)
    br label %35
35:
    br label %36
36:
    call void @putch(i32 84)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 116)
    call void @putch(i32 49)
    call void @putch(i32 32)
    call void @putch(i32 83)
    call void @putch(i32 117)
    call void @putch(i32 99)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 115)
    call void @putch(i32 33)
    call void @fun()
    call void @fun()
    call void @fun()
    call void @fun()
    call void @fun()
    call void @fun()
    ret i32 0
}


