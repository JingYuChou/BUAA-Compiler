declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@N = dso_local constant i32 10
@a = dso_local global [10 x i32] [i32 0 ,i32 1 ,i32 2 ,i32 3 ,i32 4 ,i32 5 ,i32 6 ,i32 7 ,i32 8 ,i32 9 ]
define dso_local i32 @fib(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32* %2
    %3 = load i32 , i32* %2
    %4 = icmp eq i32 %3, 1
    br i1 %4, label %5, label %7
5:
    ret i32 1
6:
    br label %7
7:
    %8 = load i32 , i32* %2
    %9 = icmp eq i32 %8, 2
    br i1 %9, label %10, label %12
10:
    ret i32 2
11:
    br label %12
12:
    %13 = load i32 , i32* %2
    %14 = sub i32 %13, 1
    %15 = call i32 @fib(i32 %14)
    %16 = load i32 , i32* %2
    %17 = sub i32 %16, 2
    %18 = call i32 @fib(i32 %17)
    %19 = add i32 %15, %18
    ret i32 %19
}

define dso_local i32 @main() {
    %1 = alloca i32
    store i32 2, i32* %1
    %2 = alloca i32
    store i32 5, i32* %2
    %3 = alloca i32
    store i32 1, i32* %3
    %4 = alloca i32
    store i32 2, i32* %4
    %5 = call i32 @getint()
    store i32 %5, i32* %1
    %6 = call i32 @getint()
    store i32 %6, i32* %2
    %7 = load i32 , i32* %1
    %8 = load i32 , i32* %2
    %9 = mul i32 %7, %8
    %10 = sub i32 0, %9
    %11 = call i32 @fib(i32 4)
    %12 = mul i32 %10, %11
    %13 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
    %14 = load i32 , i32* %13
    %15 = add i32 %12, %14
    %16 = mul i32 %15, 5
    store i32 %16, i32* %1
    %17 = call i32 @fib(i32 5)
    %18 = add i32 %17, 2
    %19 = call i32 @fib(i32 %18)
    %20 = sub i32 1197, %19
    %21 = load i32 , i32* %3
    %22 = load i32 , i32* %4
    %23 = add i32 %21, %22
    %24 = sub i32 %23, 9186
    %25 = sub i32 %24, 908
    %26 = add i32 %20, %25
    store i32 %26, i32* %2
    %27 = alloca i32
    store i32 -6, i32* %27
    br label %28
28:
    %29 = load i32 , i32* %1
    %30 = icmp slt i32 %29, 100
    br i1 %30, label %31, label %105
31:
    %32 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
    %33 = load i32 , i32* %32
    %34 = load i32 , i32* %27
    %35 = load i32 , i32* %27
    %36 = mul i32 %34, %35
    %37 = add i32 %33, %36
    %38 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
    store i32 %37, i32* %38
    %39 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
    %40 = load i32 , i32* %39
    %41 = load i32 , i32* %27
    %42 = load i32 , i32* %27
    %43 = mul i32 %41, %42
    %44 = add i32 %40, %43
    %45 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
    store i32 %44, i32* %45
    %46 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
    %47 = load i32 , i32* %46
    %48 = load i32 , i32* %27
    %49 = load i32 , i32* %27
    %50 = mul i32 %48, %49
    %51 = add i32 %47, %50
    %52 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
    store i32 %51, i32* %52
    %53 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
    %54 = load i32 , i32* %53
    %55 = load i32 , i32* %27
    %56 = load i32 , i32* %27
    %57 = mul i32 %55, %56
    %58 = add i32 %54, %57
    %59 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
    store i32 %58, i32* %59
    %60 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
    %61 = load i32 , i32* %60
    %62 = load i32 , i32* %27
    %63 = load i32 , i32* %27
    %64 = mul i32 %62, %63
    %65 = add i32 %61, %64
    %66 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
    store i32 %65, i32* %66
    %67 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
    %68 = load i32 , i32* %67
    %69 = load i32 , i32* %27
    %70 = load i32 , i32* %27
    %71 = mul i32 %69, %70
    %72 = add i32 %68, %71
    %73 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
    store i32 %72, i32* %73
    %74 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
    %75 = load i32 , i32* %74
    %76 = load i32 , i32* %27
    %77 = load i32 , i32* %27
    %78 = mul i32 %76, %77
    %79 = add i32 %75, %78
    %80 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
    store i32 %79, i32* %80
    %81 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
    %82 = load i32 , i32* %81
    %83 = load i32 , i32* %27
    %84 = load i32 , i32* %27
    %85 = mul i32 %83, %84
    %86 = add i32 %82, %85
    %87 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
    store i32 %86, i32* %87
    %88 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
    %89 = load i32 , i32* %88
    %90 = load i32 , i32* %27
    %91 = load i32 , i32* %27
    %92 = mul i32 %90, %91
    %93 = add i32 %89, %92
    %94 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
    store i32 %93, i32* %94
    %95 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
    %96 = load i32 , i32* %95
    %97 = load i32 , i32* %27
    %98 = load i32 , i32* %27
    %99 = mul i32 %97, %98
    %100 = add i32 %96, %99
    %101 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
    store i32 %100, i32* %101
    br label %102
102:
    %103 = load i32 , i32* %1
    %104 = add i32 %103, 1
    store i32 %104, i32* %1
    br label %28
105:
    store i32 0, i32* %1
    br label %106
106:
    %107 = load i32 , i32* %1
    %108 = icmp slt i32 %107, 10
    br i1 %108, label %109, label %116
109:
    %110 = load i32 , i32* %1
    %111 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %110
    %112 = load i32 , i32* %111
    call void @putint(i32 %112)
    call void @putch(i32 44)
    call void @putch(i32 32)
    %113 = load i32 , i32* %1
    %114 = add i32 %113, 1
    store i32 %114, i32* %1
    br label %115
115:
    br label %106
116:
    %117 = load i32 , i32* %1
    %118 = load i32 , i32* %2
    %119 = load i32 , i32* %27
    call void @putch(i32 10)
    call void @putint(i32 %117)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putint(i32 %118)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putint(i32 %119)
    call void @putch(i32 10)
    ret i32 0
}


