declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@MAX_VERTICES = dso_local constant i32 100
@MAX_EDGES = dso_local constant i32 500
@INT_MAX = dso_local constant i32 2147483647
@edges = dso_local global [500 x [3 x i32]] zeroinitializer
@head = dso_local global [100 x i32] zeroinitializer
@edgeCount = dso_local global i32 0
@heap = dso_local global [100 x [2 x i32]] zeroinitializer
@heapSize = dso_local global i32 0
define dso_local void @initGraph(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32* %2
    %3 = alloca i32
    store i32 0, i32* %3
    br label %4
4:
    %5 = load i32 , i32* %3
    %6 = load i32 , i32* %2
    %7 = icmp slt i32 %5, %6
    br i1 %7, label %8, label %14
8:
    %9 = load i32 , i32* %3
    %10 = getelementptr [100 x i32], [100 x i32]* @head, i32 0, i32 %9
    store i32 -1, i32* %10
    br label %11
11:
    %12 = load i32 , i32* %3
    %13 = add i32 %12, 1
    store i32 %13, i32* %3
    br label %4
14:
    store i32 0, i32* @edgeCount
    ret void
}

define dso_local void @addEdge(i32 %0, i32 %1, i32 %2) {
    %4 = alloca i32
    store i32 %0, i32* %4
    %5 = alloca i32
    store i32 %1, i32* %5
    %6 = alloca i32
    store i32 %2, i32* %6
    %7 = load i32 , i32* %5
    %8 = load i32 , i32* @edgeCount
    %9 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %8
    %10 = getelementptr [3 x i32], [3 x i32]* %9, i32 0, i32 0
    store i32 %7, i32* %10
    %11 = load i32 , i32* %6
    %12 = load i32 , i32* @edgeCount
    %13 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %12
    %14 = getelementptr [3 x i32], [3 x i32]* %13, i32 0, i32 1
    store i32 %11, i32* %14
    %15 = load i32 , i32* %4
    %16 = getelementptr [100 x i32], [100 x i32]* @head, i32 0, i32 %15
    %17 = load i32 , i32* %16
    %18 = load i32 , i32* @edgeCount
    %19 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %18
    %20 = getelementptr [3 x i32], [3 x i32]* %19, i32 0, i32 2
    store i32 %17, i32* %20
    %21 = load i32 , i32* @edgeCount
    %22 = load i32 , i32* %4
    %23 = getelementptr [100 x i32], [100 x i32]* @head, i32 0, i32 %22
    store i32 %21, i32* %23
    %24 = load i32 , i32* @edgeCount
    %25 = add i32 %24, 1
    store i32 %25, i32* @edgeCount
    ret void
}

define dso_local void @initPriorityQueue() {
    store i32 0, i32* @heapSize
    ret void
}

define dso_local void @swapNodes(i32 %0, i32 %1) {
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = alloca i32
    %6 = load i32 , i32* %3
    %7 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %6
    %8 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 0
    %9 = load i32 , i32* %8
    store i32 %9, i32* %5
    %10 = alloca i32
    %11 = load i32 , i32* %3
    %12 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %11
    %13 = getelementptr [2 x i32], [2 x i32]* %12, i32 0, i32 1
    %14 = load i32 , i32* %13
    store i32 %14, i32* %10
    %15 = load i32 , i32* %4
    %16 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %15
    %17 = getelementptr [2 x i32], [2 x i32]* %16, i32 0, i32 0
    %18 = load i32 , i32* %17
    %19 = load i32 , i32* %3
    %20 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %19
    %21 = getelementptr [2 x i32], [2 x i32]* %20, i32 0, i32 0
    store i32 %18, i32* %21
    %22 = load i32 , i32* %4
    %23 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %22
    %24 = getelementptr [2 x i32], [2 x i32]* %23, i32 0, i32 1
    %25 = load i32 , i32* %24
    %26 = load i32 , i32* %3
    %27 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %26
    %28 = getelementptr [2 x i32], [2 x i32]* %27, i32 0, i32 1
    store i32 %25, i32* %28
    %29 = load i32 , i32* %5
    %30 = load i32 , i32* %4
    %31 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %30
    %32 = getelementptr [2 x i32], [2 x i32]* %31, i32 0, i32 0
    store i32 %29, i32* %32
    %33 = load i32 , i32* %10
    %34 = load i32 , i32* %4
    %35 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %34
    %36 = getelementptr [2 x i32], [2 x i32]* %35, i32 0, i32 1
    store i32 %33, i32* %36
    ret void
}

define dso_local void @minHeapify(i32 %0, i32 %1) {
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = alloca i32
    %6 = load i32 , i32* %3
    store i32 %6, i32* %5
    %7 = alloca i32
    %8 = alloca i32
    br label %9
9:
    br label %10
10:
    %11 = load i32 , i32* %3
    %12 = mul i32 2, %11
    %13 = add i32 %12, 1
    store i32 %13, i32* %7
    %14 = load i32 , i32* %3
    %15 = mul i32 2, %14
    %16 = add i32 %15, 2
    store i32 %16, i32* %8
    %17 = load i32 , i32* %7
    %18 = load i32 , i32* %4
    %19 = icmp slt i32 %17, %18
    br i1 %19, label %20, label %32
20:
    %21 = load i32 , i32* %7
    %22 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %21
    %23 = getelementptr [2 x i32], [2 x i32]* %22, i32 0, i32 1
    %24 = load i32 , i32* %23
    %25 = load i32 , i32* %5
    %26 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %25
    %27 = getelementptr [2 x i32], [2 x i32]* %26, i32 0, i32 1
    %28 = load i32 , i32* %27
    %29 = icmp slt i32 %24, %28
    br i1 %29, label %30, label %32
30:
    %31 = load i32 , i32* %7
    store i32 %31, i32* %5
    br label %32
32:
    %33 = load i32 , i32* %8
    %34 = load i32 , i32* %4
    %35 = icmp slt i32 %33, %34
    br i1 %35, label %36, label %48
36:
    %37 = load i32 , i32* %8
    %38 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %37
    %39 = getelementptr [2 x i32], [2 x i32]* %38, i32 0, i32 1
    %40 = load i32 , i32* %39
    %41 = load i32 , i32* %5
    %42 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %41
    %43 = getelementptr [2 x i32], [2 x i32]* %42, i32 0, i32 1
    %44 = load i32 , i32* %43
    %45 = icmp slt i32 %40, %44
    br i1 %45, label %46, label %48
46:
    %47 = load i32 , i32* %8
    store i32 %47, i32* %5
    br label %48
48:
    %49 = load i32 , i32* %5
    %50 = load i32 , i32* %3
    %51 = icmp ne i32 %49, %50
    br i1 %51, label %52, label %56
52:
    %53 = load i32 , i32* %3
    %54 = load i32 , i32* %5
    call void @swapNodes(i32 %53, i32 %54)
    %55 = load i32 , i32* %5
    store i32 %55, i32* %3
    br label %58
56:
    br label %60
57:
    br label %58
58:
    br label %59
59:
    br label %9
60:
    ret void
}

define dso_local i32 @extractMin() {
    %1 = alloca i32
    %2 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 0
    %3 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
    %4 = load i32 , i32* %3
    store i32 %4, i32* %1
    %5 = load i32 , i32* @heapSize
    %6 = sub i32 %5, 1
    %7 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %6
    %8 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 0
    %9 = load i32 , i32* %8
    %10 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 0
    %11 = getelementptr [2 x i32], [2 x i32]* %10, i32 0, i32 0
    store i32 %9, i32* %11
    %12 = load i32 , i32* @heapSize
    %13 = sub i32 %12, 1
    %14 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %13
    %15 = getelementptr [2 x i32], [2 x i32]* %14, i32 0, i32 1
    %16 = load i32 , i32* %15
    %17 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 0
    %18 = getelementptr [2 x i32], [2 x i32]* %17, i32 0, i32 1
    store i32 %16, i32* %18
    %19 = load i32 , i32* @heapSize
    %20 = sub i32 %19, 1
    store i32 %20, i32* @heapSize
    %21 = load i32 , i32* @heapSize
    call void @minHeapify(i32 0, i32 %21)
    %22 = load i32 , i32* %1
    ret i32 %22
}

define dso_local void @decreaseKey(i32 %0, i32 %1) {
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = alloca i32
    store i32 0, i32* %5
    br label %6
6:
    br label %7
7:
    %8 = load i32 , i32* %5
    %9 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %8
    %10 = getelementptr [2 x i32], [2 x i32]* %9, i32 0, i32 0
    %11 = load i32 , i32* %10
    %12 = load i32 , i32* %3
    %13 = icmp eq i32 %11, %12
    br i1 %13, label %14, label %20
14:
    %15 = load i32 , i32* %4
    %16 = load i32 , i32* %5
    %17 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %16
    %18 = getelementptr [2 x i32], [2 x i32]* %17, i32 0, i32 1
    store i32 %15, i32* %18
    br label %24
19:
    br label %20
20:
    %21 = load i32 , i32* %5
    %22 = add i32 %21, 1
    store i32 %22, i32* %5
    br label %23
23:
    br label %6
24:
    br label %25
25:
    %26 = load i32 , i32* %5
    %27 = icmp ne i32 %26, 0
    br i1 %27, label %28, label %49
28:
    %29 = load i32 , i32* %5
    %30 = sub i32 %29, 1
    %31 = sdiv i32 %30, 2
    %32 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %31
    %33 = getelementptr [2 x i32], [2 x i32]* %32, i32 0, i32 1
    %34 = load i32 , i32* %33
    %35 = load i32 , i32* %5
    %36 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %35
    %37 = getelementptr [2 x i32], [2 x i32]* %36, i32 0, i32 1
    %38 = load i32 , i32* %37
    %39 = icmp sgt i32 %34, %38
    br i1 %39, label %40, label %49
40:
    %41 = load i32 , i32* %5
    %42 = load i32 , i32* %5
    %43 = sub i32 %42, 1
    %44 = sdiv i32 %43, 2
    call void @swapNodes(i32 %41, i32 %44)
    %45 = load i32 , i32* %5
    %46 = sub i32 %45, 1
    %47 = sdiv i32 %46, 2
    store i32 %47, i32* %5
    br label %48
48:
    br label %25
49:
    ret void
}

define dso_local void @dijkstra(i32 %0, i32 %1) {
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = alloca [100 x i32]
    %6 = alloca [100 x i32]
    %7 = alloca i32
    store i32 0, i32* %7
    br label %8
8:
    %9 = load i32 , i32* %7
    %10 = load i32 , i32* %4
    %11 = icmp slt i32 %9, %10
    br i1 %11, label %12, label %20
12:
    %13 = load i32 , i32* %7
    %14 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %13
    store i32 2147483647, i32* %14
    %15 = load i32 , i32* %7
    %16 = getelementptr [100 x i32], [100 x i32]* %6, i32 0, i32 %15
    store i32 0, i32* %16
    br label %17
17:
    %18 = load i32 , i32* %7
    %19 = add i32 %18, 1
    store i32 %19, i32* %7
    br label %8
20:
    %21 = load i32 , i32* %3
    %22 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %21
    store i32 0, i32* %22
    call void @initPriorityQueue()
    store i32 0, i32* %7
    br label %23
23:
    %24 = load i32 , i32* %7
    %25 = load i32 , i32* %4
    %26 = icmp slt i32 %24, %25
    br i1 %26, label %27, label %43
27:
    %28 = load i32 , i32* %7
    %29 = load i32 , i32* %7
    %30 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %29
    %31 = getelementptr [2 x i32], [2 x i32]* %30, i32 0, i32 0
    store i32 %28, i32* %31
    %32 = load i32 , i32* %7
    %33 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %32
    %34 = load i32 , i32* %33
    %35 = load i32 , i32* %7
    %36 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @heap, i32 0, i32 %35
    %37 = getelementptr [2 x i32], [2 x i32]* %36, i32 0, i32 1
    store i32 %34, i32* %37
    %38 = load i32 , i32* @heapSize
    %39 = add i32 %38, 1
    store i32 %39, i32* @heapSize
    br label %40
40:
    %41 = load i32 , i32* %7
    %42 = add i32 %41, 1
    store i32 %42, i32* %7
    br label %23
43:
    br label %44
44:
    br label %45
45:
    %46 = alloca i32
    %47 = call i32 @extractMin()
    store i32 %47, i32* %46
    %48 = load i32 , i32* %46
    %49 = getelementptr [100 x i32], [100 x i32]* %6, i32 0, i32 %48
    store i32 1, i32* %49
    %50 = alloca i32
    %51 = load i32 , i32* %46
    %52 = getelementptr [100 x i32], [100 x i32]* @head, i32 0, i32 %51
    %53 = load i32 , i32* %52
    store i32 %53, i32* %50
    br label %54
54:
    %55 = load i32 , i32* %50
    %56 = icmp ne i32 %55, -1
    br i1 %56, label %57, label %106
57:
    %58 = alloca i32
    %59 = load i32 , i32* %50
    %60 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %59
    %61 = getelementptr [3 x i32], [3 x i32]* %60, i32 0, i32 0
    %62 = load i32 , i32* %61
    store i32 %62, i32* %58
    %63 = load i32 , i32* %58
    %64 = getelementptr [100 x i32], [100 x i32]* %6, i32 0, i32 %63
    %65 = load i32 , i32* %64
    %66 = icmp eq i32 %65, 0
    br i1 %66, label %67, label %100
67:
    %68 = load i32 , i32* %46
    %69 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %68
    %70 = load i32 , i32* %69
    %71 = icmp ne i32 %70, 2147483647
    br i1 %71, label %72, label %100
72:
    %73 = load i32 , i32* %46
    %74 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %73
    %75 = load i32 , i32* %74
    %76 = load i32 , i32* %50
    %77 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %76
    %78 = getelementptr [3 x i32], [3 x i32]* %77, i32 0, i32 1
    %79 = load i32 , i32* %78
    %80 = add i32 %75, %79
    %81 = load i32 , i32* %58
    %82 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %81
    %83 = load i32 , i32* %82
    %84 = icmp slt i32 %80, %83
    br i1 %84, label %85, label %100
85:
    %86 = load i32 , i32* %46
    %87 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %86
    %88 = load i32 , i32* %87
    %89 = load i32 , i32* %50
    %90 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %89
    %91 = getelementptr [3 x i32], [3 x i32]* %90, i32 0, i32 1
    %92 = load i32 , i32* %91
    %93 = add i32 %88, %92
    %94 = load i32 , i32* %58
    %95 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %94
    store i32 %93, i32* %95
    %96 = load i32 , i32* %58
    %97 = load i32 , i32* %58
    %98 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %97
    %99 = load i32 , i32* %98
    call void @decreaseKey(i32 %96, i32 %99)
    br label %100
100:
    %101 = load i32 , i32* %50
    %102 = getelementptr [500 x [3 x i32]], [500 x [3 x i32]]* @edges, i32 0, i32 %101
    %103 = getelementptr [3 x i32], [3 x i32]* %102, i32 0, i32 2
    %104 = load i32 , i32* %103
    store i32 %104, i32* %50
    br label %105
105:
    br label %54
106:
    %107 = load i32 , i32* @heapSize
    %108 = icmp sle i32 %107, 0
    br i1 %108, label %109, label %111
109:
    br label %113
110:
    br label %111
111:
    br label %112
112:
    br label %44
113:
    %114 = load i32 , i32* %3
    call void @putch(i32 83)
    call void @putch(i32 104)
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 100)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 116)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 102)
    call void @putch(i32 114)
    call void @putch(i32 111)
    call void @putch(i32 109)
    call void @putch(i32 32)
    call void @putch(i32 115)
    call void @putch(i32 111)
    call void @putch(i32 117)
    call void @putch(i32 114)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 32)
    call void @putint(i32 %114)
    call void @putch(i32 58)
    call void @putch(i32 10)
    store i32 0, i32* %7
    br label %115
115:
    %116 = load i32 , i32* %7
    %117 = load i32 , i32* %4
    %118 = icmp slt i32 %116, %117
    br i1 %118, label %119, label %127
119:
    %120 = load i32 , i32* %7
    %121 = load i32 , i32* %7
    %122 = getelementptr [100 x i32], [100 x i32]* %5, i32 0, i32 %121
    %123 = load i32 , i32* %122
    call void @putch(i32 86)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 120)
    call void @putch(i32 32)
    call void @putint(i32 %120)
    call void @putch(i32 58)
    call void @putch(i32 32)
    call void @putch(i32 68)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 116)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    call void @putint(i32 %123)
    call void @putch(i32 10)
    br label %124
124:
    %125 = load i32 , i32* %7
    %126 = add i32 %125, 1
    store i32 %126, i32* %7
    br label %115
127:
    ret void
}

define dso_local i32 @main() {
    %1 = alloca i32
    %2 = alloca i32
    %3 = alloca i32
    call void @putch(i32 69)
    call void @putch(i32 110)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 117)
    call void @putch(i32 109)
    call void @putch(i32 98)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 111)
    call void @putch(i32 102)
    call void @putch(i32 32)
    call void @putch(i32 118)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 116)
    call void @putch(i32 105)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 58)
    call void @putch(i32 32)
    %4 = call i32 @getint()
    store i32 %4, i32* %1
    %5 = load i32 , i32* %1
    call void @initGraph(i32 %5)
    call void @putch(i32 69)
    call void @putch(i32 110)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 117)
    call void @putch(i32 109)
    call void @putch(i32 98)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 111)
    call void @putch(i32 102)
    call void @putch(i32 32)
    call void @putch(i32 101)
    call void @putch(i32 100)
    call void @putch(i32 103)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 58)
    call void @putch(i32 32)
    %6 = call i32 @getint()
    store i32 %6, i32* %2
    call void @putch(i32 69)
    call void @putch(i32 110)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 101)
    call void @putch(i32 100)
    call void @putch(i32 103)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 119)
    call void @putch(i32 105)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 32)
    call void @putch(i32 119)
    call void @putch(i32 101)
    call void @putch(i32 105)
    call void @putch(i32 103)
    call void @putch(i32 104)
    call void @putch(i32 116)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 40)
    call void @putch(i32 115)
    call void @putch(i32 114)
    call void @putch(i32 99)
    call void @putch(i32 32)
    call void @putch(i32 100)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 119)
    call void @putch(i32 101)
    call void @putch(i32 105)
    call void @putch(i32 103)
    call void @putch(i32 104)
    call void @putch(i32 116)
    call void @putch(i32 41)
    call void @putch(i32 58)
    call void @putch(i32 10)
    %7 = alloca i32
    store i32 0, i32* %7
    br label %8
8:
    %9 = load i32 , i32* %7
    %10 = load i32 , i32* %2
    %11 = icmp slt i32 %9, %10
    br i1 %11, label %12, label %25
12:
    %13 = alloca i32
    %14 = alloca i32
    %15 = alloca i32
    %16 = call i32 @getint()
    store i32 %16, i32* %13
    %17 = call i32 @getint()
    store i32 %17, i32* %14
    %18 = call i32 @getint()
    store i32 %18, i32* %15
    %19 = load i32 , i32* %13
    %20 = load i32 , i32* %14
    %21 = load i32 , i32* %15
    call void @addEdge(i32 %19, i32 %20, i32 %21)
    br label %22
22:
    %23 = load i32 , i32* %7
    %24 = add i32 %23, 1
    store i32 %24, i32* %7
    br label %8
25:
    call void @putch(i32 69)
    call void @putch(i32 110)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 115)
    call void @putch(i32 111)
    call void @putch(i32 117)
    call void @putch(i32 114)
    call void @putch(i32 99)
    call void @putch(i32 101)
    call void @putch(i32 32)
    call void @putch(i32 118)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 120)
    call void @putch(i32 58)
    call void @putch(i32 32)
    %26 = call i32 @getint()
    store i32 %26, i32* %3
    %27 = load i32 , i32* %3
    %28 = load i32 , i32* %1
    call void @dijkstra(i32 %27, i32 %28)
    ret i32 0
}


