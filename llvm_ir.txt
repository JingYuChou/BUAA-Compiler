declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local constant i32 1
@b = dso_local constant i32 2
@c = dso_local constant i32 2
@d = dso_local constant i32 3
@e = dso_local constant i32 0
@f = dso_local constant i32 0
@g = dso_local constant i32 1
@h = dso_local constant i32 -1
@l = dso_local constant i32 7800451
@o = dso_local constant i32 0
@p = dso_local constant i32 3
@q = dso_local constant i32 1965
@qq = dso_local constant i32 1965
@qqq = dso_local constant i32 1965
@arr = dso_local constant [3 x i32] [i32 0 ,i32 -45 ,i32 0 ]
@brr = dso_local constant [3 x[1 x i32] ] [ [1 x i32 ] [i32 1],  [1 x i32 ] [i32 1],  [1 x i32 ] [i32 1]]
@awa = dso_local global i32 0
@awd = dso_local global i32 141
@crr = dso_local global [2 x[3 x i32] ] [ [3 x i32 ] [i32 -389617 ,i32 228 ,i32 -22],  [3 x i32 ] [i32 16 ,i32 4 ,i32 10]]
@drr = dso_local global [1 x[2 x i32] ] [ [2 x i32 ] [i32 141 ,i32 116]]
@err = dso_local global [2 x i32] [i32 225 ,i32 747 ]
define dso_local void @foo1() {
    ret void
1:
    ret void
2:
    ret void
3:
    ret void
}

define dso_local void @foo2(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32* %2
    ret void
}

define dso_local void @mqsort(i32 %0, i32 %1, i32* %2) {
    %4 = alloca i32
    store i32 %0, i32* %4
    %5 = alloca i32
    store i32 %1, i32* %5
    %6 = alloca i32*
    store i32* %2, i32** %6
    %7 = load i32 , i32* %4
    %8 = load i32 , i32* %5
    %9 = icmp sge i32 %7, %8
    br i1 %9, label %10, label %12
10:
    ret void
11:
    br label %12
12:
    %13 = alloca i32
    %14 = load i32 , i32* %4
    %15 = load i32 , i32* %5
    %16 = add i32 %14, %15
    %17 = sdiv i32 %16, 2
    %18 = load i32* , i32** %6
    %19 = getelementptr i32, i32* %18, i32 %17
    %20 = load i32 , i32* %19
    store i32 %20, i32* %13
    %21 = alloca i32
    %22 = load i32 , i32* %4
    %23 = sub i32 %22, 1
    store i32 %23, i32* %21
    %24 = alloca i32
    %25 = load i32 , i32* %5
    %26 = add i32 %25, 1
    store i32 %26, i32* %24
    br label %27
27:
    %28 = load i32 , i32* %21
    %29 = load i32 , i32* %24
    %30 = icmp slt i32 %28, %29
    br i1 %30, label %31, label %82
31:
    %32 = load i32 , i32* %21
    %33 = add i32 %32, 1
    store i32 %33, i32* %21
    br label %34
34:
    %35 = load i32 , i32* %21
    %36 = load i32* , i32** %6
    %37 = getelementptr i32, i32* %36, i32 %35
    %38 = load i32 , i32* %37
    %39 = load i32 , i32* %13
    %40 = icmp slt i32 %38, %39
    br i1 %40, label %41, label %45
41:
    %42 = load i32 , i32* %21
    %43 = add i32 %42, 1
    store i32 %43, i32* %21
    br label %44
44:
    br label %34
45:
    %46 = load i32 , i32* %24
    %47 = sub i32 %46, 1
    store i32 %47, i32* %24
    br label %48
48:
    %49 = load i32 , i32* %24
    %50 = load i32* , i32** %6
    %51 = getelementptr i32, i32* %50, i32 %49
    %52 = load i32 , i32* %51
    %53 = load i32 , i32* %13
    %54 = icmp sgt i32 %52, %53
    br i1 %54, label %55, label %59
55:
    %56 = load i32 , i32* %24
    %57 = sub i32 %56, 1
    store i32 %57, i32* %24
    br label %58
58:
    br label %48
59:
    %60 = load i32 , i32* %21
    %61 = load i32 , i32* %24
    %62 = icmp slt i32 %60, %61
    br i1 %62, label %63, label %80
63:
    %64 = alloca i32
    %65 = load i32 , i32* %21
    %66 = load i32* , i32** %6
    %67 = getelementptr i32, i32* %66, i32 %65
    %68 = load i32 , i32* %67
    store i32 %68, i32* %64
    %69 = load i32 , i32* %24
    %70 = load i32* , i32** %6
    %71 = getelementptr i32, i32* %70, i32 %69
    %72 = load i32 , i32* %71
    %73 = load i32 , i32* %21
    %74 = load i32* , i32** %6
    %75 = getelementptr i32, i32* %74, i32 %73
    store i32 %72, i32* %75
    %76 = load i32 , i32* %64
    %77 = load i32 , i32* %24
    %78 = load i32* , i32** %6
    %79 = getelementptr i32, i32* %78, i32 %77
    store i32 %76, i32* %79
    br label %80
80:
    br label %81
81:
    br label %27
82:
    %83 = load i32 , i32* %4
    %84 = load i32 , i32* %24
    %85 = load i32* , i32** %6
    call void @mqsort(i32 %83, i32 %84, i32* %85)
    %86 = load i32 , i32* %24
    %87 = add i32 %86, 1
    %88 = load i32 , i32* %5
    %89 = load i32* , i32** %6
    call void @mqsort(i32 %87, i32 %88, i32* %89)
    ret void
}

define dso_local i32 @foo3(i32 %0, i32 %1) {
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = load i32 , i32* %3
    %6 = load i32 , i32* %4
    %7 = add i32 %5, %6
    ret i32 %7
}

define dso_local void @mqsort2(i32 %0, i32 %1, [20 x i32]* %2) {
    %4 = alloca i32
    store i32 %0, i32* %4
    %5 = alloca i32
    store i32 %1, i32* %5
    %6 = alloca [20 x i32]*
    store [20 x i32]* %2, [20 x i32]** %6
    %7 = load i32 , i32* %4
    %8 = load i32 , i32* %5
    %9 = icmp sge i32 %7, %8
    br i1 %9, label %10, label %12
10:
    ret void
11:
    br label %12
12:
    %13 = alloca i32
    %14 = load i32 , i32* %4
    %15 = load i32 , i32* %5
    %16 = add i32 %14, %15
    %17 = sdiv i32 %16, 2
    %18 = load [20 x i32]* , [20 x i32]** %6
    %19 = getelementptr [20 x i32], [20 x i32]* %18, i32 1
    %20 = getelementptr [20 x i32], [20 x i32]* %19, i32 0, i32 %17
    %21 = load i32 , i32* %20
    store i32 %21, i32* %13
    %22 = alloca i32
    %23 = load i32 , i32* %4
    %24 = sub i32 %23, 1
    store i32 %24, i32* %22
    %25 = alloca i32
    %26 = load i32 , i32* %5
    %27 = add i32 %26, 1
    store i32 %27, i32* %25
    br label %28
28:
    %29 = load i32 , i32* %22
    %30 = load i32 , i32* %25
    %31 = icmp slt i32 %29, %30
    br i1 %31, label %32, label %89
32:
    %33 = load i32 , i32* %22
    %34 = add i32 %33, 1
    store i32 %34, i32* %22
    br label %35
35:
    %36 = load i32 , i32* %22
    %37 = load [20 x i32]* , [20 x i32]** %6
    %38 = getelementptr [20 x i32], [20 x i32]* %37, i32 1
    %39 = getelementptr [20 x i32], [20 x i32]* %38, i32 0, i32 %36
    %40 = load i32 , i32* %39
    %41 = load i32 , i32* %13
    %42 = icmp slt i32 %40, %41
    br i1 %42, label %43, label %47
43:
    %44 = load i32 , i32* %22
    %45 = add i32 %44, 1
    store i32 %45, i32* %22
    br label %46
46:
    br label %35
47:
    %48 = load i32 , i32* %25
    %49 = sub i32 %48, 1
    store i32 %49, i32* %25
    br label %50
50:
    %51 = load i32 , i32* %25
    %52 = load [20 x i32]* , [20 x i32]** %6
    %53 = getelementptr [20 x i32], [20 x i32]* %52, i32 1
    %54 = getelementptr [20 x i32], [20 x i32]* %53, i32 0, i32 %51
    %55 = load i32 , i32* %54
    %56 = load i32 , i32* %13
    %57 = icmp sgt i32 %55, %56
    br i1 %57, label %58, label %62
58:
    %59 = load i32 , i32* %25
    %60 = sub i32 %59, 1
    store i32 %60, i32* %25
    br label %61
61:
    br label %50
62:
    %63 = load i32 , i32* %22
    %64 = load i32 , i32* %25
    %65 = icmp slt i32 %63, %64
    br i1 %65, label %66, label %87
66:
    %67 = alloca i32
    %68 = load i32 , i32* %22
    %69 = load [20 x i32]* , [20 x i32]** %6
    %70 = getelementptr [20 x i32], [20 x i32]* %69, i32 1
    %71 = getelementptr [20 x i32], [20 x i32]* %70, i32 0, i32 %68
    %72 = load i32 , i32* %71
    store i32 %72, i32* %67
    %73 = load i32 , i32* %25
    %74 = load [20 x i32]* , [20 x i32]** %6
    %75 = getelementptr [20 x i32], [20 x i32]* %74, i32 1
    %76 = getelementptr [20 x i32], [20 x i32]* %75, i32 0, i32 %73
    %77 = load i32 , i32* %76
    %78 = load i32 , i32* %22
    %79 = load [20 x i32]* , [20 x i32]** %6
    %80 = getelementptr [20 x i32], [20 x i32]* %79, i32 1
    %81 = getelementptr [20 x i32], [20 x i32]* %80, i32 0, i32 %78
    store i32 %77, i32* %81
    %82 = load i32 , i32* %67
    %83 = load i32 , i32* %25
    %84 = load [20 x i32]* , [20 x i32]** %6
    %85 = getelementptr [20 x i32], [20 x i32]* %84, i32 1
    %86 = getelementptr [20 x i32], [20 x i32]* %85, i32 0, i32 %83
    store i32 %82, i32* %86
    br label %87
87:
    br label %88
88:
    br label %28
89:
    %90 = load i32 , i32* %4
    %91 = load i32 , i32* %25
    %92 = load [20 x i32]* , [20 x i32]** %6
    call void @mqsort2(i32 %90, i32 %91, [20 x i32]* %92)
    %93 = load i32 , i32* %25
    %94 = add i32 %93, 1
    %95 = load i32 , i32* %5
    %96 = load [20 x i32]* , [20 x i32]** %6
    call void @mqsort2(i32 %94, i32 %95, [20 x i32]* %96)
    ret void
}

define dso_local i32 @main() {
    store i32 10, i32* @awa
    %1 = alloca i32
    store i32 545, i32* %1
    call void @putch(i32 50)
    call void @putch(i32 48)
    call void @putch(i32 50)
    call void @putch(i32 51)
    call void @putch(i32 49)
    call void @putch(i32 50)
    call void @putch(i32 48)
    call void @putch(i32 52)
    call void @putch(i32 10)
    %2 = sdiv i32 243, 440
    %3 = srem i32 %2, 570
    %4 = sdiv i32 559, 373
    %5 = srem i32 %4, 960
    %6 = sdiv i32 %5, 460
    %7 = srem i32 %6, 101
    %8 = srem i32 %7, 205
    %9 = srem i32 %8, 16
    %10 = sdiv i32 %9, 487
    %11 = sub i32 %3, %10
    %12 = sdiv i32 107, 234
    %13 = sdiv i32 %12, 435
    %14 = sub i32 %11, %13
    %15 = load i32 , i32* @a
    %16 = add i32 %14, %15
    %17 = load i32 , i32* %1
    call void @putch(i32 97)
    call void @putch(i32 119)
    call void @putch(i32 97)
    call void @putch(i32 100)
    call void @putch(i32 119)
    call void @putch(i32 97)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putint(i32 %17)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 111)
    call void @putch(i32 119)
    call void @putch(i32 10)
    %18 = alloca i32
    store i32 11, i32* %18
    call void @putch(i32 97)
    call void @putch(i32 119)
    call void @putch(i32 97)
    call void @putch(i32 100)
    call void @putch(i32 119)
    call void @putch(i32 97)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 104)
    call void @putch(i32 97)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 99)
    call void @putch(i32 104)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 103)
    call void @putch(i32 101)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 98)
    call void @putch(i32 108)
    call void @putch(i32 111)
    call void @putch(i32 99)
    call void @putch(i32 107)
    call void @putch(i32 10)
    %19 = load i32 , i32* %18
    call void @putch(i32 97)
    call void @putch(i32 119)
    call void @putch(i32 97)
    call void @putch(i32 100)
    call void @putch(i32 119)
    call void @putch(i32 97)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putint(i32 %19)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 111)
    call void @putch(i32 119)
    call void @putch(i32 10)
    %20 = alloca i32
    store i32 14, i32* %20
    %21 = mul i32 208, 695
    %22 = srem i32 %21, 426
    %23 = sdiv i32 %22, 896
    %24 = load i32 , i32* %20
    %25 = icmp slt i32 %23, %24
    br i1 %25, label %26, label %27
26:
    br label %27
27:
    %28 = mul i32 208, 695
    %29 = srem i32 %28, 426
    %30 = sdiv i32 %29, 896
    %31 = load i32 , i32* %20
    %32 = icmp sgt i32 %30, %31
    br i1 %32, label %33, label %34
33:
    br label %34
34:
    %35 = mul i32 208, 695
    %36 = srem i32 %35, 426
    %37 = sdiv i32 %36, 896
    %38 = load i32 , i32* %20
    %39 = icmp eq i32 %37, %38
    br i1 %39, label %40, label %41
40:
    br label %41
41:
    %42 = load i32 , i32* %20
    %43 = load i32 , i32* @g
    %44 = icmp ne i32 %42, %43
    br i1 %44, label %45, label %54
45:
    %46 = load i32 , i32* @g
    %47 = icmp eq i32 %46, 0
    br i1 %47, label %48, label %53
48:
    %49 = alloca i32
    %50 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @crr, i32 0, i32 0
    %51 = getelementptr [3 x i32], [3 x i32]* %50, i32 0, i32 1
    %52 = load i32 , i32* %51
    store i32 %52, i32* %49
    br label %53
53:
    br label %54
54:
    %55 = mul i32 247, 821
    %56 = srem i32 45, 268
    %57 = srem i32 %56, 445
    %58 = mul i32 %57, 262
    %59 = sub i32 %55, %58
    %60 = srem i32 938, 66
    %61 = sub i32 %59, %60
    %62 = mul i32 140, 975
    %63 = mul i32 %62, 882
    %64 = sdiv i32 %63, 758
    %65 = mul i32 %64, 199
    %66 = sdiv i32 %65, 282
    %67 = sub i32 %61, %66
    %68 = mul i32 175, 80
    %69 = sdiv i32 %68, 646
    %70 = sub i32 %67, %69
    %71 = sdiv i32 181, 962
    %72 = srem i32 %71, 857
    %73 = srem i32 %72, 193
    %74 = mul i32 %73, 658
    %75 = mul i32 %74, 287
    %76 = sdiv i32 %75, 796
    %77 = srem i32 %76, 674
    %78 = mul i32 %77, 285
    %79 = srem i32 %78, 314
    %80 = add i32 %70, %79
    %81 = load i32 , i32* %20
    %82 = icmp sge i32 %80, %81
    br i1 %82, label %83, label %93
83:
    %84 = load i32 , i32* %20
    %85 = load i32 , i32* %20
    %86 = icmp eq i32 %84, %85
    br i1 %86, label %87, label %92
87:
    %88 = load i32 , i32* %20
    %89 = icmp ne i32 %88, 0
    br i1 %89, label %90, label %91
90:
    call void @putch(i32 100)
    call void @putch(i32 111)
    call void @putch(i32 117)
    call void @putch(i32 98)
    call void @putch(i32 108)
    call void @putch(i32 101)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 102)
    call void @putch(i32 10)
    br label %91
91:
    br label %92
92:
    br label %93
93:
    %94 = alloca i32
    store i32 11, i32* %94
    br label %95
95:
    %96 = load i32 , i32* %94
    %97 = icmp sle i32 %96, 10000
    br i1 %97, label %98, label %114
98:
    %99 = load i32 , i32* %94
    %100 = add i32 %99, 1
    store i32 %100, i32* %94
    %101 = load i32 , i32* %94
    %102 = icmp sgt i32 %101, 100
    br i1 %102, label %103, label %105
103:
    %104 = load i32 , i32* %94
    call void @putch(i32 99)
    call void @putch(i32 117)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 118)
    call void @putch(i32 97)
    call void @putch(i32 108)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 108)
    call void @putch(i32 111)
    call void @putch(i32 111)
    call void @putch(i32 112)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putint(i32 %104)
    call void @putch(i32 10)
    br label %107
105:
    br label %113
106:
    br label %107
107:
    %108 = load i32 , i32* %94
    %109 = icmp eq i32 %108, 101
    br i1 %109, label %110, label %112
110:
    br label %114
111:
    br label %112
112:
    br label %113
113:
    br label %95
114:
    call void @putch(i32 105)
    call void @putch(i32 110)
    call void @putch(i32 112)
    call void @putch(i32 117)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 101)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 114)
    call void @putch(i32 114)
    call void @putch(i32 97)
    call void @putch(i32 121)
    call void @putch(i32 32)
    call void @putch(i32 119)
    call void @putch(i32 104)
    call void @putch(i32 105)
    call void @putch(i32 99)
    call void @putch(i32 104)
    call void @putch(i32 32)
    call void @putch(i32 108)
    call void @putch(i32 101)
    call void @putch(i32 110)
    call void @putch(i32 103)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 101)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 119)
    call void @putch(i32 105)
    call void @putch(i32 108)
    call void @putch(i32 108)
    call void @putch(i32 32)
    call void @putch(i32 115)
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 114)
    call void @putch(i32 114)
    call void @putch(i32 97)
    call void @putch(i32 121)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 114)
    call void @putch(i32 101)
    call void @putch(i32 113)
    call void @putch(i32 117)
    call void @putch(i32 105)
    call void @putch(i32 114)
    call void @putch(i32 101)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 108)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 115)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 97)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 50)
    call void @putch(i32 48)
    call void @putch(i32 10)
    %115 = alloca i32
    %116 = call i32 @getint()
    store i32 %116, i32* %115
    %117 = alloca [20 x i32]
    %118 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 0
    store i32 0, i32* %118
    %119 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 1
    store i32 0, i32* %119
    %120 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 2
    store i32 0, i32* %120
    %121 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 3
    store i32 0, i32* %121
    %122 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 4
    store i32 0, i32* %122
    %123 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 5
    store i32 0, i32* %123
    %124 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 6
    store i32 0, i32* %124
    %125 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 7
    store i32 0, i32* %125
    %126 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 8
    store i32 0, i32* %126
    %127 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 9
    store i32 0, i32* %127
    %128 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 10
    store i32 0, i32* %128
    %129 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 11
    store i32 0, i32* %129
    %130 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 12
    store i32 0, i32* %130
    %131 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 13
    store i32 0, i32* %131
    %132 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 14
    store i32 0, i32* %132
    %133 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 15
    store i32 0, i32* %133
    %134 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 16
    store i32 0, i32* %134
    %135 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 17
    store i32 0, i32* %135
    %136 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 18
    store i32 0, i32* %136
    %137 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 19
    store i32 0, i32* %137
    %138 = alloca i32
    store i32 0, i32* %138
    %139 = alloca [2 x [20 x i32]]
    %140 = getelementptr [2 x [20 x i32]], [2 x [20 x i32]]* %139, i32 0, i32 0
    %141 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 0
    store i32 0, i32* %141
    %142 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 1
    store i32 0, i32* %142
    %143 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 2
    store i32 0, i32* %143
    %144 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 3
    store i32 0, i32* %144
    %145 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 4
    store i32 0, i32* %145
    %146 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 5
    store i32 0, i32* %146
    %147 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 6
    store i32 0, i32* %147
    %148 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 7
    store i32 0, i32* %148
    %149 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 8
    store i32 0, i32* %149
    %150 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 9
    store i32 0, i32* %150
    %151 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 10
    store i32 0, i32* %151
    %152 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 11
    store i32 0, i32* %152
    %153 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 12
    store i32 0, i32* %153
    %154 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 13
    store i32 0, i32* %154
    %155 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 14
    store i32 0, i32* %155
    %156 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 15
    store i32 0, i32* %156
    %157 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 16
    store i32 0, i32* %157
    %158 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 17
    store i32 0, i32* %158
    %159 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 18
    store i32 0, i32* %159
    %160 = getelementptr [20 x i32], [20 x i32]* %140, i32 0, i32 19
    store i32 0, i32* %160
    %161 = getelementptr [2 x [20 x i32]], [2 x [20 x i32]]* %139, i32 0, i32 1
    %162 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 0
    store i32 0, i32* %162
    %163 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 1
    store i32 0, i32* %163
    %164 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 2
    store i32 0, i32* %164
    %165 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 3
    store i32 0, i32* %165
    %166 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 4
    store i32 0, i32* %166
    %167 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 5
    store i32 0, i32* %167
    %168 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 6
    store i32 0, i32* %168
    %169 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 7
    store i32 0, i32* %169
    %170 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 8
    store i32 0, i32* %170
    %171 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 9
    store i32 0, i32* %171
    %172 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 10
    store i32 0, i32* %172
    %173 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 11
    store i32 0, i32* %173
    %174 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 12
    store i32 0, i32* %174
    %175 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 13
    store i32 0, i32* %175
    %176 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 14
    store i32 0, i32* %176
    %177 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 15
    store i32 0, i32* %177
    %178 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 16
    store i32 0, i32* %178
    %179 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 17
    store i32 0, i32* %179
    %180 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 18
    store i32 0, i32* %180
    %181 = getelementptr [20 x i32], [20 x i32]* %161, i32 0, i32 19
    store i32 0, i32* %181
    br label %182
182:
    %183 = load i32 , i32* %138
    %184 = load i32 , i32* %115
    %185 = icmp slt i32 %183, %184
    br i1 %185, label %186, label %196
186:
    %187 = load i32 , i32* %138
    %188 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 %187
    %189 = load i32 , i32* %188
    %190 = load i32 , i32* %138
    %191 = getelementptr [2 x [20 x i32]], [2 x [20 x i32]]* %139, i32 0, i32 1
    %192 = getelementptr [20 x i32], [20 x i32]* %191, i32 0, i32 %190
    store i32 %189, i32* %192
    %193 = load i32 , i32* %138
    %194 = add i32 %193, 1
    store i32 %194, i32* %138
    br label %195
195:
    br label %182
196:
    store i32 0, i32* %138
    br label %197
197:
    %198 = load i32 , i32* %138
    %199 = load i32 , i32* %115
    %200 = icmp slt i32 %198, %199
    br i1 %200, label %201, label %208
201:
    %202 = call i32 @getint()
    %203 = load i32 , i32* %138
    %204 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 %203
    store i32 %202, i32* %204
    %205 = load i32 , i32* %138
    %206 = add i32 %205, 1
    store i32 %206, i32* %138
    br label %207
207:
    br label %197
208:
    %209 = load i32 , i32* %115
    %210 = sub i32 %209, 1
    %211 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 0
    call void @mqsort(i32 0, i32 %210, i32* %211)
    store i32 0, i32* %138
    call void @putch(i32 97)
    call void @putch(i32 102)
    call void @putch(i32 116)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 115)
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 116)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 116)
    call void @putch(i32 104)
    call void @putch(i32 101)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 114)
    call void @putch(i32 114)
    call void @putch(i32 97)
    call void @putch(i32 121)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 115)
    call void @putch(i32 58)
    call void @putch(i32 32)
    br label %212
212:
    %213 = load i32 , i32* %138
    %214 = load i32 , i32* %115
    %215 = icmp slt i32 %213, %214
    br i1 %215, label %216, label %223
216:
    %217 = load i32 , i32* %138
    %218 = getelementptr [20 x i32], [20 x i32]* %117, i32 0, i32 %217
    %219 = load i32 , i32* %218
    call void @putint(i32 %219)
    call void @putch(i32 32)
    %220 = load i32 , i32* %138
    %221 = add i32 %220, 1
    store i32 %221, i32* %138
    br label %222
222:
    br label %212
223:
    call void @putch(i32 52)
    call void @putch(i32 49)
    call void @putch(i32 52)
    call void @putch(i32 52)
    call void @putch(i32 49)
    call void @putch(i32 52)
    %224 = load i32 , i32* %115
    %225 = sub i32 %224, 1
    %226 = getelementptr [2 x [20 x i32]], [2 x [20 x i32]]* %139, i32 0, i32 0
    call void @mqsort2(i32 0, i32 %225, [20 x i32]* %226)
    %227 = load i32 , i32* %115
    %228 = sub i32 %227, 1
    %229 = getelementptr [2 x [20 x i32]], [2 x [20 x i32]]* %139, i32 0, i32 1
    %230 = getelementptr [20 x i32], [20 x i32]* %229, i32 0, i32 0
    call void @mqsort(i32 0, i32 %228, i32* %230)
    %231 = alloca i32
    %232 = load i32 , i32* %115
    %233 = getelementptr [2 x i32], [2 x i32]* @err, i32 0, i32 0
    %234 = load i32 , i32* %233
    %235 = call i32 @foo3(i32 %232, i32 %234)
    store i32 %235, i32* %231
    %236 = load i32 , i32* %231
    %237 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @crr, i32 0, i32 0
    %238 = getelementptr [3 x i32], [3 x i32]* %237, i32 0, i32 1
    store i32 %236, i32* %238
    %239 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @crr, i32 0, i32 0
    %240 = getelementptr [3 x i32], [3 x i32]* %239, i32 0, i32 1
    %241 = load i32 , i32* %240
    %242 = getelementptr [2 x i32], [2 x i32]* @err, i32 0, i32 1
    store i32 %241, i32* %242
    %243 = getelementptr [2 x i32], [2 x i32]* @err, i32 0, i32 1
    %244 = load i32 , i32* %243
    %245 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @crr, i32 0, i32 0
    %246 = getelementptr [3 x i32], [3 x i32]* %245, i32 0, i32 1
    store i32 %244, i32* %246
    ret i32 0
}


